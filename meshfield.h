//===============================================================================================================
//
// mashfield.h
// author : Haruyuki Neko
//
//===============================================================================================================

/* インクルードガードの先頭 */
#ifndef _FIELD_H_
#define _FIELD_H_

//============================================================================
//
// マクロ定義
//
//============================================================================

// 地面のテクスチャファイル
#define FIELD_FILE              ( "data/TEXTURE/field003.jpg" )

#define FIELD_MOVE_SPEED        ( 0.f )		// 地面の移動量
#define TEXTURE_NUM             ( 3 )		// テクスチャ数
#define TEXTURE_SIZE            ( 100 )		// テクスチャのサイズ

//============================================================================
//
// 構造体定義
//
//============================================================================

/* 壁用 構造体 */
typedef struct
{
	LPDIRECT3DVERTEXBUFFER9 pD3DVtxBtxBuffer;	// バーテックスバッファへのポインタ
	LPDIRECT3DINDEXBUFFER9  pD3DIndxBuff;		// インデックスバッファへのポインタ
	LPDIRECT3DTEXTURE9      pD3DTexture;		// テクスチャ

	D3DXMATRIX mtxWorld;		// ワールドマトリックス

	D3DXVECTOR3 pos;		// 位置
	D3DXVECTOR3 rot;		// 向き
	D3DXVECTOR3 scl;		// 大きさ

	bool bUse;				// 使用しているかどうか
}MESH_FIELD;

//============================================================================
//
// 関数プロトタイプ宣言
//
//============================================================================

HRESULT InitField(void);	// フィールドの初期化
void DrawField(void);		// フィールドの描画処理
void UpdataFiled(void);		// フィールドの更新処理
void UnInitField(void);		// フィールドの開放処理

MESH_FIELD GetField( int nIdx );	// フィールドの情報取得

/* インクルードガードの最終行 */
#endif	// _FIELD_H_