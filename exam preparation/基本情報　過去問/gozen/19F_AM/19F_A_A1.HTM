<html>

<head>
<title>平成19年度秋期試験　解答例と解説（午前問1～問20）</title>
<style>
<!--
p { line-height: 175% }
-->
</style>
</head>

<body>

<blockquote>
	<form>
		<hr>
		<div align="center">
			<h3>平成19年度秋期試験　解答例と解説（午前問1～問20）</h3>
		</div>
		<hr>
		<!-- 問の開始 -->
		<p><strong><a name="01">問1</a></strong></p>
		<p><select name="19FA01" size="1">
		<option selected>解答例</option>
		<option>ウ</option>
		</select></p>
		<p>〈解説〉　16進数の0.Cを10進数で表すと，</p>
		<p><img src="ansimg/fig1.png" /></p>
		<hr>
		<p><a href="19F_A_E1.HTM#01">問題へ</a></p>
		<hr>
		<p><strong><a name="02">問2</a></strong></p>
		<p><select name="19FA02" size="1">
		<option selected>解答例</option>
		<option>ア</option>
		</select></p>
		<p>〈解説〉　2進数のビット列を2倍すると1ビット左シフトするので，b<sub>1</sub>b<sub>2</sub>…b<sub>n</sub>×2はb<sub>1</sub>b<sub>2</sub>…b<sub>n</sub>0になることを利用する。<br>
		　b<sub>1</sub>b<sub>2</sub>…b<sub>n</sub>×3<br>
		　　＝b<sub>1</sub>b<sub>2</sub>…b<sub>n</sub>×（2＋1）<br>
		　　＝b<sub>1</sub>b<sub>2</sub>…b<sub>n</sub>×2＋b<sub>1</sub>b<sub>2</sub>…b<sub>n</sub>×1<br>
		　　＝b<sub>1</sub>b<sub>2</sub>…b<sub>n</sub>0＋b<sub>1</sub>b<sub>2</sub>…b<sub>n</sub></p>
		<hr>
		<p><a href="19F_A_E1.HTM#02">問題へ</a></p>
		<hr>
		<p><strong><a name="03">問3</a></strong></p>
		<p><select name="19FA03" size="1">
		<option selected>解答例</option>
		<option>エ</option>
		</select></p>
		<p>〈解説〉</p>
		<p>●aの場合<br>
		　1101を1の補数による表現と解釈すると，その絶対値は1101をビット反転した0010となるので，1101は10進数で－2になる。<br>
		●bの場合<br>
		　1101を2の補数による表現と解釈すると，その絶対値は1101をビット反転した0010に1を加算した0011となるので，1101は10進数で－3になる。<br>
		●cの場合<br>
		　1101を絶対値に符号を付けた表現と解釈すると，その絶対値は101となるので，1101は10進数で－5になる。</p>
		<p>　したがって，値の小さい順に並べるとc，b，aになる。</p>
		<hr>
		<p><a href="19F_A_E1.HTM#03">問題へ</a></p>
		<hr>
		<p><strong><a name="04">問4</a></strong></p>
		<p><select name="19FA04" size="1">
		<option selected>解答例</option>
		<option>イ</option>
		</select></p>
		<p>〈解説〉　丸め誤差は，切捨て，切上げ，四捨五入することにより発生する誤差。<br>
		ア　×　オーバフローによる誤差<br>
		イ　○<br>
		ウ　×　情報落ち<br>
		エ　×　けた落ち</p>
		<hr>
		<p><a href="19F_A_E1.HTM#04">問題へ</a></p>
		<hr>
		<p><strong><a name="05">問5</a></strong></p>
		<p><select name="19FA05" size="1">
		<option selected>解答例</option>
		<option>ウ</option>
		</select></p>
		<p>
		〈解説〉　あるコンピュータで100元連立方程式の解を求めるのに2秒かかったとすると，その4倍の計算速度をもつコンピュータでは2秒÷4＝0.5秒かかることになる。したがって，1000元連立方程式の解を求めるときの計算時間をxとすると<br>
		　　100<sup>3</sup>：1000<sup>3</sup>＝0.5：x<br>
		　　x＝0.5×1000<sup>3</sup>÷100<sup>3</sup>＝0.5×1000＝500秒</p>
		<hr>
		<p><a href="19F_A_E1.HTM#05">問題へ</a></p>
		<hr>
		<p><strong><a name="06">問6</a></strong></p>
		<p><select name="19FA06" size="1">
		<option selected>解答例</option>
		<option>エ</option>
		</select></p>
		<p>〈解説〉</p>
		<p>（2個とも赤である確率）<br>
		　　＝（1個目に赤い玉が取り出される確率）×（残りの玉から2個目に赤が取り出される確率）<br>
		　　＝（5／9）×（4／8）<br>
		　　＝5／18</p>
		<hr>
		<p><a href="19F_A_E1.HTM#06">問題へ</a></p>
		<hr>
		<p><strong><a name="07">問7</a></strong></p>
		<p><select name="19FA07" size="1">
		<option selected>解答例</option>
		<option>ア</option>
		</select></p>
		<p>〈解説〉</p>
		<p>ア　○<br>
		イ　×　変量間の関係が線形であるとは，一方の変量が増えれば他方の変量も増えるか，または一方の変量が増えれば他方の変量が減る関係，つまり，正または負の相関があるときで，相関係数は1に近い値または－１に近い値をとる<br>
		ウ　×　変量間の関係が非線形であるとは，変量間の関係が線形でない場合で，相関係数は0に近い値をとる<br>
		エ　×　無相関の場合，相関係数は0になる</p>
		<hr>
		<p><a href="19F_A_E1.HTM#07">問題へ</a></p>
		<hr>
		<p><strong><a name="08">問8</a></strong></p>
		<p><select name="19FA08" size="1">
		<option selected>解答例</option>
		<option>ウ</option>
		</select></p>
		<p>〈解説〉</p>
		<p>ア　×　<img src="ansimg/fig2.png" />なので<img src="ansimg/fig3.png" />ではあるが，<img src="ansimg/fig4.png" />ではない。<br>
		　　　　<img src="ansimg/fig5.png" /><br>
		イ　×　以下のように包含関係がなく，成り立たない<br>
		　　　　<img src="ansimg/fig6.png" /><br>
		ウ　○　<img src="ansimg/fig7.png" />なので<img src="ansimg/fig8.png" />が成り立つ<br>
		エ　×　以下のように包含関係がなく，成り立たない<br>
		　　　　<img src="ansimg/fig9.png" /></p>
		<hr>
		<p><a href="19F_A_E1.HTM#08">問題へ</a></p>
		<hr>
		<p><strong><a name="09">問9</a></strong></p>
		<p><select name="19FA09" size="1">
		<option selected>解答例</option>
		<option>エ</option>
		</select></p>
		<p>〈解説〉</p>
		<p>　命題<em>P</em> が真なので，命題（not <em>P</em> ）は偽となる。したがって，命題（not <em>P</em> ） or 
		<em>Q</em> ＝命題（偽 or <em>Q</em> ）が真であるなら，命題<em>Q</em> は真になる。<br>
		　命題<em>Q</em> が真であれば，命題（not <em>Q</em> ）は偽となる。したがって命題（not <em>Q</em> ） or 
		<em>R</em> ＝命題（偽 or <em>R</em> ）が真であるなら，命題<em>R</em> は真になる。</p>
		<hr>
		<p><a href="19F_A_E1.HTM#09">問題へ</a></p>
		<hr>
		<p><strong><a name="10">問10</a></strong></p>
		<p><select name="19FA10" size="1">
		<option selected>解答例</option>
		<option>ア</option>
		</select></p>
		<p>〈解説〉　状態遷移表が空欄のとき状態は遷移しないので，状態S1のとき信号t1に対して，また状態S2のとき信号t3に対して状態は遷移しない。<br>
		　初期状態S1からの，入力信号に対する状態の遷移は，以下のようになる。<br>
		<code>　　入力信号　　t1　t2　t3　t4　t1　t2　t3　t4<br>
		　　状態遷移　S1→S1→S3→S4→S2→S3→S2→S2→S1<br>
		</code>　したがって，最終の状態はS1となる。</p>
		<hr>
		<p><a href="19F_A_E1.HTM#10">問題へ</a></p>
		<hr>
		<p><strong><a name="11">問11</a></strong></p>
		<p><select name="19FA11" size="1">
		<option selected>解答例</option>
		<option>ア</option>
		</select></p>
		<p>
		〈解説〉　2分探索の場合，1回の探索を行うごとに探索するデータ範囲の個数が1／2になるので，目的のデータが<em>k</em> 回の探索で見つかったとすると2<sup><em>k</em></sup> ≦<em>n</em>。両辺の対数をとり<em>k</em> ≦log<sub>2</sub><em>n</em>。したがって2分探索の実行時間のオーダは log<sub>2</sub><em>n</em> になる。<br>
		　線形探索の場合，目的のデータがデータ列の最後尾にあっても最大<em>n</em> 回の探索で見つかる。したがって，線形探索の実行時間のオーダは<em>n</em> になる。<br>
		　ハッシュ探索の場合，ハッシュ値の衝突がなければ1回の探索で，衝突があってもハッシュ値の同じシノニムのリンクをたどるなどで数回のシノニム探索で見つかる。したがって，ハッシュ探索の実行時間のオーダは1になる。</p>
		<hr>
		<p><a href="19F_A_E1.HTM#11">問題へ</a></p>
		<hr>
		<p><strong><a name="12">問12</a></strong></p>
		<p><select name="19FA12" size="1">
		<option selected>解答例</option>
		<option>エ</option>
		</select></p>
		<p>〈解説〉　<em>n</em> が根の＋であるとき，Proc(＋)を実行する。<br>
		<br>
		（1）＋に左の子aがあるので，Proc(a)を呼び出す<br>
		　　　　　・aに子がないのでaを出力する　―――――→　a<br>
		（2）＋に右の子＊があるので，Proc(＊)を呼び出す<br>
		　　①＊に左の子－があるので，Proc(－)を呼び出す<br>
		　　　1）－に左の子bがあるので，Proc(b)を呼び出す<br>
		　　　　　・bに子がないので，bを出力する　――――→　b<br>
		　　　2）－に右の子cがあるので，Proc(c)を呼び出す<br>
		　　　　　・cに子がないので，cを出力する　――――→　c<br>
		　　　3）－を出力する　―――――――――――――→　－<br>
		　　②＊に右の子dがあるので，Proc(d)を呼び出す<br>
		　　　　　・dに子がないので，dを出力する　――――→　d<br>
		　　③＊を出力する　―――――――――――――――→　＊<br>
		（3）＋を出力する　―――――――――――――――→　＋<br>
		<br>
		　したがって，abc－d＊＋が出力されるので，エが適切。</p>
		<hr>
		<p><a href="19F_A_E1.HTM#12">問題へ</a></p>
		<hr>
		<p><strong><a name="13">問13</a></strong></p>
		<p><select name="19FA13" size="1">
		<option selected>解答例</option>
		<option>イ</option>
		</select></p>
		<p>〈解説〉</p>
		<p>　関数f(x)は，変数pが初期値0のとき，変数pの値に1だけ加算し，変数pに対応する配列要素A[p]にデータxを格納する処理を行う。この処理は変数pをスタック変数，配列要素A[p]をスタックとして，スタックにデータxの値をPUSHする処理と考えることができる。<br>
		　関数g( )は，配列要素A[p]の値を変数xにセットし，変数pの値を1だけ減らし，変数xの値を戻り値として返す処理を行う。この処理は変数pをスタック変数，配列要素A[p]をスタックとして，スタックからデータをPOPする処理と考えることができる。</p>
		<hr>
		<p><a href="19F_A_E1.HTM#13">問題へ</a></p>
		<hr>
		<p><strong><a name="14">問14</a></strong></p>
		<p><select name="19FA14" size="1">
		<option selected>解答例</option>
		<option>ウ</option>
		</select></p>
		<p>〈解説〉　2分探索法では，探索範囲を右半分または左半分に縮小して，再びその中央のデータとの比較を繰り返すことで探索を行う。<br>
		　昇順にソートされたデータ列の場合，探索範囲の中央のデータ<em>A</em>（<em>k</em> ）と対象データ<em>x</em>とを比較し，<br>
		　　<em>A</em>（<em>k</em> ）＝<em>x</em> のときは，探索を終了する。<br>
		　　<em>A</em>（<em>k</em> ）＜<em>x</em> であれば，対象データ<em>x</em> は中央より右半分を探索すればよいので，空欄aは<em>k</em> ＋1→<em>lo</em> が適切。<br>
		　　<em>A</em> （<em>k</em> ）＞<em>x</em> であれば対象データxは中央より左半分を探索すればよく，空欄bは<em>k</em> －1→<em>hi</em> が適切。</p>
		<hr>
		<p><a href="19F_A_E1.HTM#14">問題へ</a></p>
		<hr>
		<p><strong><a name="15">問15</a></strong></p>
		<p><select name="19FA15" size="1">
		<option selected>解答例</option>
		<option>イ</option>
		</select></p>
		<p>〈解説〉</p>
		<p><em>F</em> (231, 15)＝<em>F</em> (15, 231 mod 15)<br>
		　　　　　＝<em>F</em> (15, 6)<br>
		　　　　　＝<em>F</em> (6, 15 mod 6)<br>
		　　　　　＝<em>F</em> (6, 3)<br>
		　　　　　＝<em>F</em> (3, 6 mod 3)<br>
		　　　　　＝<em>F</em> (3, 0)<br>
		　　　　　＝3</p>
		<hr>
		<p><a href="19F_A_E1.HTM#15">問題へ</a></p>
		<hr>
		<p><strong><a name="16">問16</a></strong></p>
		<p><select name="19FA16" size="1">
		<option selected>解答例</option>
		<option>エ</option>
		</select></p>
		<p>〈解説〉</p>
		<p>　SRAMはフリップフロップ回路で構成された，高速なメモリでキャッシュメモリなどに用いられる。<br>
		　DRAMはコンデンサに電荷が蓄積されているか否かの状態により1または0の情報を記憶するので，時間の経過により電荷が減少し，リフレッシュによる再書込み動作が必要になるため，SRAMより低速。</p>
		<hr>
		<p><a href="19F_A_E1.HTM#16">問題へ</a></p>
		<hr>
		<p><strong><a name="17">問17</a></strong></p>
		<p><select name="19FA17" size="1">
		<option selected>解答例</option>
		<option>ウ</option>
		</select></p>
		<p>〈解説〉</p>
		<p>ア　×　Zには常に0が出力される<br>
		　　　　<img src="ansimg/fig10.png" /><br>
		イ　×　Zには常に1が出力される<br>
		　　　　<img src="ansimg/fig11.png" /><br>
		ウ　○　X，Yが共に0または共に1のときZには1が出力される。X，Yが0と1の異なる値をとるとき，Zには0が出力される<br>
		　　　　<img src="ansimg/fig12.png" /><br>
		エ　×　これは排他的論理和を出力する回路で，X，Yが0と1の異なる値をとるとき，Zには1が出力される。X，Yが共に0または共に1のときZには0が出力される</p>
		<hr>
		<p><a href="19F_A_E1.HTM#17">問題へ</a></p>
		<hr>
		<p><strong><a name="18">問18</a></strong></p>
		<p><select name="19FA18" size="1">
		<option selected>解答例</option>
		<option>ア</option>
		</select></p>
		<p>〈解説〉</p>
		<p>　「指標付きアドレス指定方式」は，レジスタ番号により指定された指標レジスタの値とアドレス部の値を加算して実効アドレスを算出する方式。<br>
		　「相対アドレス指定」は、プログラムカウンタの値を基準アドレスとして、プログラムカウンタからの変位アドレスを加算して実効アドレスを算出する方式。</p>
		<hr>
		<p><a href="19F_A_E1.HTM#18">問題へ</a></p>
		<hr>
		<p><strong><a name="19">問19</a></strong></p>
		<p><select name="19FA19" size="1">
		<option selected>解答例</option>
		<option>エ</option>
		</select></p>
		<p>〈解説〉　　以下の①～③により計算できる。<br>
		　　① 1クロックの時間＝1÷クロック周波数<br>
		　　② 1命令の実行時間＝1命令の実行に必要なクロック数×1クロックの時間<br>
		　　③ 1秒間の命令実行回数＝1÷1命令の実行時間（命令）<br>
		<br>
		　1 GHz，つまり10<sup>9</sup> Hzで動作するので，<br>
		　　① 1クロックの時間＝1÷クロック周波数<br>
		　　　　　　　　　　　＝1÷10<sup>9</sup><br>
		　　　　　　　　　　　＝10<sup>－9</sup>秒<br>
		　1命令の実行に必要なクロック数は0.8クロックなので，<br>
		　　② 1命令の実行時間＝0.8×10<sup>－9</sup>秒<br>
		　　③ 1秒間の命令実行回数＝1÷1命令の実行時間（命令）<br>
		　　　　　　　　　　　　　＝1÷（0.8×10<sup>－9</sup>）<br>
		　　　　　　　　　　　　　＝100,000÷0.8×10<sup>4</sup><br>
		　　　　　　　　　　　　　＝125,000×10<sup>4</sup>（命令）<br>
		　　　　　　　　　　　　　＝125,000（万命令）</p>
		<p>＜別解＞<br>
		　上記の①式を②式に代入すると，<br>
		　　1命令の実行時間＝1命令の実行に必要なクロック数÷クロック周波数<br>
		　となる。これを③式に代入すると，<br>
		　　1秒間の命令実行回数<br>
		　　　＝クロック周波数÷1命令の実行に必要なクロック数<br>
		　　　＝10<sup>9</sup>÷0.8<br>
		　　　＝125,000×10<sup>4</sup>（命令）<br>
		　　　＝125,000（万命令）</p>
		<hr>
		<p><a href="19F_A_E1.HTM#19">問題へ</a></p>
		<hr>
		<p><strong><a name="20">問20</a></strong></p>
		<p><select name="19FA20" size="1">
		<option selected>解答例</option>
		<option>ア</option>
		</select></p>
		<p>〈解説〉</p>
		<p>
		　「外部割込み」はハードウェア割込みとも呼ばれ，入出力動作の終了時における入出力割込み，ハードウェアの故障や誤動作の場合における機械チェック割込みやタイマ割込みがある。<br>
		　これに対し「内部割込み」はプログラム割込みとも呼ばれ，ゼロ割やけたあふれなどによるプログラムの演算例外，ページフォルト，命令コード異常などがある。</p>
		<p>ア　○<br>
		イ　×　内部割込み（プログラム演算例外）<br>
		ウ　×　内部割込み（ページフォルト割込み）<br>
		エ　×　内部割込み</p>
		<hr>
		<p><a href="19F_A_E1.HTM#20">問題へ</a></p>
		<hr>
		<p><a href="INDEX.HTM">メニューへ戻る</a></p>
		<hr>
	</form>
</blockquote>

</body>

</html>
