<html>

<head>
<title>平成17年度秋期試験　正解例と解説（午前問21〜問40）</title>
</head>

<body>
<blockquote>
<form>

<hr>
<div align="center">
<h3>平成17年度秋期試験　正解例と解説（午前問21〜問40）</h3>
</div>

<hr>
<p><strong><a name="21">問21</a></strong></p>
<p><select name="17FA21" size="1"><option selected>解答例</option><option>イ</option></select></p>
<p>〈解説〉</p>
<p>ア　×<br>
生成多項式による巡回冗長検査方式で，通信データなどのバーストエラーチェック（連続したビットのエラー）に用いられる方式で，修正は不可。</p>
<p>イ　○<br>
誤り検出訂正符号方式（Error Checking and Correction 
Code）。複数の冗長ビットを付加し，誤りの検出または訂正を行う方式。1ビットの誤りを訂正でき，また2ビットの誤りを検出できる。</p>
<p>ウ　×<br>
通信データやファイルのデータを数値化して合計したものをチェックサムとして通信データやファイルに付加し，通信データやファイルのデータの現在のチェックサムを計算し，付加されているチェックサムと一致するかどうかを調べることでエラーチェックする方式。</p>
<p>エ　×<br>
パリティビットと呼ばれる冗長ビットを付加し，ビット誤りの検出を行う方式。誤りの自動訂正は不可。</p>
<hr>
<a href="17F_A_E2.HTM#21">問題へ</a>



<hr>
<p><strong><a name="22">問22</a></strong></p>
<p><select name="17FA22" size="1"><option selected>解答例</option><option>ウ</option></select></p>
<p>〈解説〉</p>
<p>平均アクセス時間＝平均位置決め時間＋回転待ち時間＋データ転送時間で計算する。</p>
<p>平均位置決め時間＝20（ミリ秒）<br>
1回転の時間＝60×1000（ミリ秒）÷6000（回転）＝10（ミリ秒）<br>
回転待ち時間＝1回転の時間÷2＝5（ミリ秒）<br>
1回転の時間「10ミリ秒」間に20kバイトを転送するので，1ブロック（4kバイト）の転送時間は，<br>
1ブロックの転送時間＝4（kバイト）÷20（kバイト）×10（ミリ秒）＝2（ミリ秒）<br>
となる。したがって，平均アクセス時間＝20＋5＋2＝27（ミリ秒）</p>
<hr>
<a href="17F_A_E2.HTM#22">問題へ</a>



<hr>
<p><strong><a name="23">問23</a></strong></p>
<p><select name="17FA23" size="1"><option selected>解答例</option><option>ウ</option></select></p>
<p>〈解説〉</p>
<p>1ブロック長<br>
　＝500×50<br>
　＝25000（バイト）</p>
<p>1ブロックの記録に必要なセクタ数<br>
　＝25000（バイト）÷512（バイト）<br>
　＝48.8<br>
　≒49セクタ（切上げ）</p>
<p>50レコードを1ブロックにするので，50万件のレコードは10000ブロックに相当する。<br>
1ブロックの記録に49セクタ必要なので，50万件のレコードの記録には490000セクタが必要になる。</p>
<p>1シリンダのセクタ数<br>
　＝25（セクタ／トラック）×20（トラック／シリンダ）<br>
　＝500（セクタ／シリンダ）</p>
<p>1シリンダに500セクタあるので，490000÷500＝980（シリンダ）必要になる。</p>
<hr>
<a href="17F_A_E2.HTM#23">問題へ</a>



<hr>
<p><strong><a name="24">問24</a></strong></p>
<p><select name="17FA24" size="1"><option selected>解答例</option><option>エ</option></select></p>
<p>〈解説〉</p>
<p>ア　×　MO（光磁気ディスク）の記録方式<br>
イ　×　ハードディスクなどの磁気ディスクの記録方式<br>
ウ　×　CD-RWやDVD-RAMの記録方式<br>
エ　○</p>
<hr>
<a href="17F_A_E2.HTM#24">問題へ</a>



<hr>
<p><strong><a name="25">問25</a></strong></p>
<p><select name="17FA25" size="1"><option selected>解答例</option><option>ア</option></select></p>
<p>〈解説〉</p>
<p>レーザプリンタはページプリンタとも呼ばれ，印字性能は1インチ当たりのドット数と1分間に印刷できるページ数で決まる。</p>
<hr>
<a href="17F_A_E2.HTM#25">問題へ</a>



<hr>
<p><strong><a name="26">問26</a></strong></p>
<p><select name="17FA26" size="1"><option selected>解答例</option><option>エ</option></select></p>
<p>〈解説〉</p>
<p>
プログラム記憶方式はプログラム内蔵方式とも呼ばれ，フォン･ノイマンによって提唱された方式。あらかじめプログラムとデータをコンピュータのメモリ（主記憶）に読み込んでおき，メモリ上に読み込まれたプログラムをCPUが順に読み出して解読・実行する方式である。</p>
<hr>
<a href="17F_A_E2.HTM#26">問題へ</a>



<hr>
<p><strong><a name="27">問27</a></strong></p>
<p><select name="17FA27" size="1"><option selected>解答例</option><option>ア</option></select></p>
<p>〈解説〉</p>
<p>ア　○<br>
イ　×　参照回数が最も少ないページを追い出す<br>
ウ　×　最後に参照されたページを追い出す<br>
エ　×　最後に参照されてからの時間経過が最も長いページを追い出す</p>
<hr>
<a href="17F_A_E2.HTM#27">問題へ</a>



<hr>
<p><strong><a name="28">問28</a></strong></p>
<p><select name="17FA28" size="1"><option selected>解答例</option><option>ウ</option></select></p>
<p>〈解説〉</p>
<p>
優先度の高いタスクには3ミリ秒のI/O処理が2回ある。CPUの遊休時間をゼロにするには，この2回のI/O処理におけるCPUの遊休時間に，別の優先度の低いタスクのCPU処理を実行し，その遊休時間を活用する必要がある。したがって優先度の低いタスクに3ミリ秒のCPU処理が2回ある必要がある。以上から，ウのタスクが適切。ウのタスクと組み合わせたタイムチャートは，以下のようになる。</p>
<p>
<img border="0" src="IMAGE/q28.gif" width="411" height="182"></p>
<hr>
<a href="17F_A_E2.HTM#28">問題へ</a>



<hr>
<p><strong><a name="29">問29</a></strong></p>
<p><select name="17FA29" size="1"><option selected>解答例</option><option>イ</option></select></p>
<p>〈解説〉</p>
<p>以下のような表を作成し，ア〜エの場合について，変数e，f，g，h，i，jの内容をトレースしてみると良い。</p>
<table border="1" cellspacing="0" id="AutoNumber1" cellpadding="4">
  <tr>
    <td width="27" align="center">　</td>
    <td width="27" align="center">e</td>
    <td width="27" align="center">f</td>
    <td width="27" align="center">h</td>
    <td width="28" align="center">i</td>
    <td width="28" align="center">g＝e＋f</td>
    <td width="28" align="center">j＝h×i</td>
    <td width="28" align="center">g→x</td>
    <td width="28" align="center">j→x</td>
  </tr>
  <tr>
    <td width="27" align="center">ア</td>
    <td width="27" align="center">3</td>
    <td width="27" align="center">3</td>
    <td width="27" align="center">3</td>
    <td width="28" align="center">3</td>
    <td width="28" align="center">6</td>
    <td width="28" align="center">9</td>
    <td width="28" align="center">6</td>
    <td width="28" align="center">9</td>
  </tr>
  <tr>
    <td width="27" align="center">イ</td>
    <td width="27" align="center">3</td>
    <td width="27" align="center">9</td>
    <td width="27" align="center">3</td>
    <td width="28" align="center">3</td>
    <td width="28" align="center" bgcolor="#FFFFCC">12</td>
    <td width="28" align="center">9</td>
    <td width="28" align="center">12</td>
    <td width="28" align="center">9</td>
  </tr>
  <tr>
    <td width="27" align="center">ウ</td>
    <td width="27" align="center">3</td>
    <td width="27" align="center">3</td>
    <td width="27" align="center">3</td>
    <td width="28" align="center">6</td>
    <td width="28" align="center">6</td>
    <td width="28" align="center">18</td>
    <td width="28" align="center">6</td>
    <td width="28" align="center">18</td>
  </tr>
  <tr>
    <td width="27" align="center">エ</td>
    <td width="27" align="center">3</td>
    <td width="27" align="center">3</td>
    <td width="27" align="center">3</td>
    <td width="28" align="center">3</td>
    <td width="28" align="center">6</td>
    <td width="28" align="center">9</td>
    <td width="28" align="center">6</td>
    <td width="28" align="center">9</td>
  </tr>
</table>
<p>したがって，イの場合に，最終的なxの値が12となる。</p>
<hr>
<a href="17F_A_E2.HTM#29">問題へ</a>



<hr>
<p><strong><a name="30">問30</a></strong></p>
<p><select name="17FA30" size="1"><option selected>解答例</option><option>ア</option></select></p>
<p>〈解説〉</p>
<p>
いずれ（オーバレイ，ページング，スワッピング）も補助記憶と主記憶との間でやり取りするが，オーバレイでは，あらかじめプログラムを幾つかの機能単位に分割し，機能単位ごとに出し入れする。ページングでは，固定長の単位に分割し，固定長単位で管理する。スワッピングでは，使用中の主記憶の内容をまるごと退避し，再ロードする（つまり丸ごと入れ替える）。</p>
<hr>
<a href="17F_A_E2.HTM#30">問題へ</a>



<hr>
<p><strong><a name="31">問31</a></strong></p>
<p><select name="17FA31" size="1"><option selected>解答例</option><option>イ</option></select></p>
<p>〈解説〉</p>
<p>
ハードウェア依存部分と非依存部分を分離せずに，ハードウェア管理からメモリ管理，プロセス管理に至るOSのすべての機能を組み込んだものをモノシリックカーネルという。これに対しハードウェア依存部分と非依存部分を分離し，OSが提供する機能を最小限のメモリ管理やプロセス管理などに限定したものをマイクロカーネルという。</p>
<hr>
<a href="17F_A_E2.HTM#31">問題へ</a>



<hr>
<p><strong><a name="32">問32</a></strong></p>
<p><select name="17FA32" size="1"><option selected>解答例</option><option>イ</option></select></p>
<p>〈解説〉</p>
<p>ア　×　ワークステーションの端末としての機能<br>
イ　○<br>
ウ　×　垂直分散方式<br>
エ　×　水平分散方式</p>
<hr>
<a href="17F_A_E2.HTM#32">問題へ</a>



<hr>
<p><strong><a name="33">問33</a></strong></p>
<p><select name="17FA33" size="1"><option selected>解答例</option><option>イ</option></select></p>
<p>〈解説〉</p>
<p>ア　×<br>
ベンチマークテストで用いるベンチマークプログラムは，使用目的ごとに選定されたプログラムと測定用データを用いて，ハードウェアとソフトウェアの性能を測定する手法で，選定した目的の範囲に限定される。</p>
<p>イ　○<br>
ソフトウェアモニタリングでは測定用のモニタプログラムを被測定系のハードウェアで動作させて，システム資源の利用状況などに関する統計データを収集し，分析する。</p>
<p>ウ　×<br>
プロトタイピングモデルとは，システムの負荷予測に基づき，負荷をかけるためのプログラムなどを用いてシステムに負荷をかけてシステム性能を測定する手法。</p>
<p>エ　×<br>
ハードウェアモニタリングでは測定用の専用ハードウェアを用いてCPU利用率などのハードウェアの稼動状況を測定し分析するが，実際に稼動していない段階でシステム資源の利用状況を測定し予測しても意味がない。</p>
<hr>
<a href="17F_A_E2.HTM#33">問題へ</a>



<hr>
<p><strong><a name="34">問34</a></strong></p>
<p><select name="17FA34" size="1"><option selected>解答例</option><option>ア</option></select></p>
<p>〈解説〉</p>
<p>
仮想記憶機能はハードディスクの一部を仮想メモリとして使う機能で，メモリの容量が小さい場合，メモリに格納しきれないプログラムの一部をハードディスク上の仮想記憶上に置き，メモリとハードディスクとの間で一定単位のサイズで入れ替えることにより実行する。アプリケーションソフトの処理速度が遅くはなるが，仮想記憶の大きさの設定値を増やせば，メモリ不足で起動できないような場合も実行できるようになる。</p>
<hr>
<a href="17F_A_E2.HTM#34">問題へ</a>



<hr>
<p><strong><a name="35">問35</a></strong></p>
<p><select name="17FA35" size="1"><option selected>解答例</option><option>イ</option></select></p>
<p>〈解説〉</p>
<p>MTBF（平均故障間隔）は，故障と故障の間の稼動している時間の平均値で，</p>
<p>MTBF<br>
＝稼動している時間の合計÷稼動回数<br>
＝（t<sub>1</sub>＋t<sub>2</sub>＋…＋t<sub>n</sub>）÷n</p>
<p>MTTR（平均修理時間）は修理時間の平均値で，</p>
<p>MTTR<br>
＝修理時間の合計÷修理回数<br>
＝（r<sub>1</sub>＋r<sub>2</sub>＋…＋r<sub>n</sub>）÷n</p>
<hr>
<a href="17F_A_E2.HTM#35">問題へ</a>



<hr>
<p><strong><a name="36">問36</a></strong></p>
<p><select name="17FA36" size="1"><option selected>解答例</option><option>イ</option></select></p>
<p>〈解説〉</p>
<p>ア　×　オブジェクトコードのレベルで変換する。<br>
イ　○　クロスコンパイラは，実行環境とは別のコンピュータでコンパイルする。<br>
ウ　×　処理効率の悪い処理を等価的に変換し処理効率を最適化する。<br>
エ　×　パラメータを指定してソースコードを自動生成する。</p>
<hr>
<a href="17F_A_E2.HTM#36">問題へ</a>



<hr>
<p><strong><a name="37">問37</a></strong></p>
<p><select name="17FA37" size="1"><option selected>解答例</option><option>エ</option></select></p>
<p>〈解説〉</p>
<p>ア　×　ファイルダンプ<br>
イ　×　メモリダンプ<br>
ウ　×　スナップショットダンプ<br>
エ　○　トレーサ</p>
<hr>
<a href="17F_A_E2.HTM#37">問題へ</a>



<hr>
<p><strong><a name="38">問38</a></strong></p>
<p><select name="17FA38" size="1"><option selected>解答例</option><option>エ</option></select></p>
<p>〈解説〉</p>
<p>ア　×<br>
クラスのインスタンスの構成を示す静的構造図。</p>
<p>イ　×<br>
クラスの種類や属性，相互関係を示す静的構造図。</p>
<p>ウ　×<br>
ソフトウェアコンポーネントの実装図。</p>
<p>エ　○<br>
オブジェクトの生成・消滅やオブジェクト相互間のメッセージの順序などオブジェクト間の相互作用を表す図。</p>
<hr>
<a href="17F_A_E2.HTM#38">問題へ</a>



<hr>
<p><strong><a name="39">問39</a></strong></p>
<p><select name="17FA39" size="1"><option selected>解答例</option><option>エ</option></select></p>
<p>〈解説〉</p>
<p>
クラスがその親のクラスから属性とメソッドを引き継ぐことができる「継承」，データとそれに関連した処理手順（アルゴリズム）をひとまとめに一体化した「オブジェクト」，各オブジェクトのデータを互いに独立させ，他のオブジェクトのデータの参照や更新ができないようにする「カプセル化」，サブクラスに共通な機能を抽出してスーパークラスとしてまとめる「抽象化」などの基本概念からなる。</p>
<p>ア　×　クラス以外はオブジェクト指向の概念でない<br>
イ　×　クラス以外はオブジェクト指向の概念でない<br>
ウ　×　クラス，カプセル化以外はオブジェクト指向の概念でない<br>
エ　○</p>
<hr>
<a href="17F_A_E2.HTM#39">問題へ</a>



<hr>
<p><strong><a name="40">問40</a></strong></p>
<p><select name="17FA40" size="1"><option selected>解答例</option><option>ウ</option></select></p>
<p>〈解説〉</p>
<p>
機能中心に構造化を行うプロセス中心設計に対し，データ中心設計では，入出力データ構造という最も安定した情報資源に着目し，プログラムの構造化設計を行う。データ構造の特性をプログラム構造に適用し，プログラムをモジュールに分割して構造化を行なう。</p>
<hr>
<a href="17F_A_E2.HTM#40">問題へ</a>
<hr>
<p><a href="INDEX.HTM">メニューへ戻る</a></p>
<hr>

</blockquote>
</form>
</body>
</html>