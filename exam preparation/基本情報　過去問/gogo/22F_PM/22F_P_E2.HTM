<html>
<head>
<title>平成22年度 秋期 基本情報技術者 午後 問題（問3～問5）</title>
<style type="text/css"><!--
body{line-height:150%;}
code{font-size:12pt;}
h3{text-align:center;}
div.caution{border:solid 1px #000000; padding:0.5em;}
--></style>
</head>
<body>
<blockquote>
<hr>
<h3>平成22年度　秋期　基本情報技術者<br/>
午後　問題（問3～問5）</h3>
<hr>
<p><a name="30"><strong>問3</strong></a>　CRC（巡回冗長検査）に関する次の記述を読んで，設問1～3に答えよ。</p>
<p>　CRCは，誤り検出方式の一つである。送信側でデータに誤り検出符号（以下，符号という）を付加して送信し，受信側で検査することによって，転送の際の誤りの有無を判断する。</p>
<hr>
<p><a name="31"><strong>設問1</strong></a>　次の記述中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>　CRCを採用したパケット転送システムでは，送信側でパケットに符号が付加され，受信側で誤りの有無を検査する。受信側で誤りが検出されると，送信側に対して該当パケットの再送を要求する。100個のパケットに格納されたデータの転送において，受信側が実際に受信したパケットが，再送されたパケットも含めて［　　　　　］個であったとすると，受信したパケットの20％から誤りが検出されたことになる。ここで，送信したパケットは必ず相手に届くものとする。また，パケットの再送要求は誤りなく届き，再送要求には必ず応じるものとする。</p>
<p>解答群<br/>
ア　100　　　イ　102　　　ウ　120　　　エ　125</p>
<hr>
<a href="22F_P_A2.HTM#31">設問1の正解例と解説へ</a>
<hr>
<p><a name="32"><strong>設問2</strong></a>　次の記述中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>　任意の長さのビット列の符号を求める計算手順を次に示す。ここで，符号の長さは<em>n </em>ビットとする。</p>
<p>〔<em>n </em>ビットの符号を求める計算手順〕<br/>
（1）左端及び右端のビットが1である（<em>n </em>＋1）ビットのビットパターン（以下，マスクという）を定める。<br/>
（2）符号計算対象のビット列の右端に<em>n </em>ビットの0を付加したビット列を作る。<br/>
（3）（2）で作ったビット列に対して次の操作を行う。<br/>
　①　ビット列の左端から調べ，最初に値が1であるビットの位置<em>p </em>を見つける。<br/>
　②　<em>p </em>を左端とし<em>p </em>＋<em>n </em>を右端とする部分ビット列に対し，マスクで排他的論理和（XOR）を取る。<br/>
　③　ビット列の右端<em>n </em>ビット以外がすべて0になるまで，①及び②を繰り返す。<br/>
（4）（3）の操作で得られたビット列の右端<em>n </em>ビットが符号となる。</p>
<p>　図に，マスクが101のときの符号（2ビット）を計算する例を示す。</p>
<p><img src="img/22f_pm_q03_01.png"><br/>
<strong>図　マスクが101のときの符号（2ビット）を計算する例</strong></p>
<p>　マスク101で計算した，符号計算対象のビット列0010 0110の2ビットの符号は［　　　　　］である。</p>
<p>解答群<br/>
ア　00　　　イ　01　　　ウ　10　　　エ　11</p>
<hr>
<a href="22F_P_A2.HTM#32">設問2の正解例と解説へ</a>
<hr>
<p><a name="33"><strong>設問3</strong></a>　次の記述中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。<br/>
<p>　誤りの有無の検査は，次の手順で行う。</p>
<p>〔誤りの有無の検査手順〕<br/>
（1）受信したビット列に対して，送信側で符号の計算に利用したものと同じマスクを使い，〔<em>n </em>ビットの符号を求める計算手順〕の（3）と同じ処理を行う。<br/>
（2）右端<em>n </em>ビットの値によって，誤りの有無を判断する。<br/>
受信したビット列（符号が付加されたビット列）を，誤りの有無の検査手順に従って検査すると，誤りがなければ最後に残った右端<em>n </em>ビットの値は［　　a　　］になる。このことは次の手順で説明できる。</p>
<p>〔手順〕<br/>
（1）符号計算対象のビット列を一つの数値<em>D </em>と見ると，符号<em>C </em>は次の式で表せる。<br/>
　　式①　<img src="img/22f_pm_q03_02.png" align="middle" style="margin-bottom:9px;"><br/>
　ここで，<img src="img/22f_pm_q03_03.png" style="margin-bottom:9px;">はXORを表し，<em>m </em>はXORの繰返し回数とする。<em>d </em><sub><em>i </em></sub>（1≦<em>i </em>≦<em>m </em>）はマスクに対応するビット列である。図の例では，<em>d </em><sub>1</sub>＝0101000000，<em>d </em><sub>2</sub>＝0001010000，<em>d </em><sub>3</sub>＝0000001010である。<br/>
（2）〔誤りの有無の検査手順〕で得られた結果の右端<em>n </em>ビットの値<em>T </em>は，次の式で表せる。<br/>
　　式②　<img src="img/22f_pm_q03_04.png" align="middle" style="margin-bottom:9px;"><br/>
（3）式②を変形すると次の式となる。<br/>
　　式③　<img src="img/22f_pm_q03_05.png" align="middle" style="margin-bottom:9px;"><br/>
（4）式①と式③によって，<br/>
　　［　　b　　］＝<em>T </em><br/>
となる。</p>
<p>　マスク101で計算した符号を右端に付加したビット列1001001101を受信した。個のビット列には［　　c　　］。</p>
<p>aに関する解答群<br/>
ア　すべてのビットが0<br/>
イ　すべてのビットが1<br/>
ウ　符号と同じ<br/>
エ　符号の各ビットを反転させたものと同じ</p>
<p>bに関する解答群<br/>
ア　2<sup><em>n </em></sup>－1　　　イ　<em>C</em>　　　ウ　<img src="img/22f_pm_q03_06.png" align="middle" style="margin-bottom:6px;">　　　エ　<img src="img/22f_pm_q03_07.png" align="middle" style="margin-bottom:6px;"></p>
<p>cに関する解答群<br/>
ア　誤りが含まれる<br/>
イ　誤りは含まれない<br/>
ウ　誤りが含まれるか否かは判断できない</p>
<hr>
<a href="22F_P_A2.HTM#33">設問3の正解例と解説へ</a>
<hr>
<a href="INDEX.HTM">■メニューへ戻る</a>
<hr>
<p><a name="40"><strong>問4</strong></a>　認証システムに関する次の記述を読んで，設問に答えよ。</p>
<p>　複数のクライアントと複数のアプリケーションサーバ（以下，APサーバという）が接続されているネットワークにおいて，単純な認証システムを利用する場合について，ここでは二つの問題点を取り上げる。<br/>
　①　利用者は，使用するクライアントから各APサーバにログインするごとに，利用者IDとパスワードの入力操作を行わなければならない。<br/>
　②　クライアントとAPサーバとの間の通信データの横取りと偽造によって，APサーバのサービスが不正に利用される危険性がある。<br/>
　ここで，これらの問題を改善するための認証システム（以下，新認証システムという）を考える。<br/>
　なお，ここでは，これらの問題に直接関連しない仕様については，その記述を省略する。</p>
<p>〔新認証システムによる問題点の解消〕<br/>
　問題点①に対しては，利用者が一度，利用者IDとパスワードをクライアントに入力して認証を受ければ，そのクライアントと各APサーバ間での認証は，利用者を介さないで済むように改善する。<br/>
　このために，チケットと呼ぶ認証データを用いる。チケットは，クライアントに対して発行され，そのクライアントは，APサーバの認証を得るとき，発行されたチケットをAPサーバに送信する。<br/>
　問題点②に対しては，APサーバに送信されたチケットが，チケットの発行を受けたクライアントから送られてきたものであることを，APサーバが確認できるよう，チケットとは別に認証子と呼ぶ認証データを用いる。</p>
<p>　図1に新認証システムの構成を示す。</p>
<p><img src="img/22f_pm_q04_01.png"><br/>
<strong>図1　新認証システムの構成</strong></p>
<p>〔新認証システムの構成と方式についての説明〕<br/>
（1）新認証システムでは，共通鍵暗号方式によって，通信データを暗号化する。以下，共通鍵を鍵という。<br/>
（2）認証サイトは，認証サーバ，鍵データベース及びチケット発行サーバで構成する。<br/>
（3）チケット発行サーバの鍵は，チケット発行サーバ自体と鍵データベースに登録されている。<br/>
（4）各APサーバの鍵は，それぞれのAPサーバ自体と鍵データベースに登録されている。<br/>
（5）利用者の鍵は，利用者のパスワードから計算して決められ，鍵データベースに登録されている。クライアントには，利用者が入力したパスワードから計算した鍵が，利用者がクラインアントの利用を終了するまで，一時的に保持される。</p>
<p>〔認証のための通信の例〕<br/>
　図2は，利用者が，クライアントCから目的のAPサーバSにアクセスする場合の認証の流れを示す。</p>
<p><img src="img/22f_pm_q04_02.png"><br/>
<strong><font size="2">注</strong>　通信Rは，鍵データベースを参照していることを表す。</font><br/>
<strong>図2　認証の流れの例</strong></p>
<p>　認証は，次の3段階で行われる。ここで，enc(x)は，xを暗号化したものを表す。</p>
<p>　第1段階は，クライアントCがチケット発行サーバTにチケットを要求するためのチケット（以下，チケット発行サーバT用チケットという）の認証サーバAへの要求（図2中の通信①）と，その発行（図2中の通信②）である。<br>
　通信①では，クライアントCは，次のデータを認証サーバAに送信する。</p>
<p><img src="img/22f_pm_q04_03.png"></p>
<p>　通信②では，認証サーバAは，次のデータをクライアントCに応答する。</p>
<p><img src="img/22f_pm_q04_04.png"></p>
<p>　第2段階は，クライアントCがAPサーバSにアクセスするためのチケット（以下，APサーバS用チケットという）のチケット発行サーバTへの要求（図2中の通信③）と，その発行（図2中の通信④）である。<br/>
　通信③では，クライアントCは，次のデータをチケット発行サーバTに送信する。</p>
<p><img src="img/22f_pm_q04_05.png"></p>
<p>　チケット発行サーバTは，TICKET<sub>CT</sub>を送信したのが間違いなくクライアントCであることをTICKET<sub>CT</sub>とAUTH<sub>C1</sub>から確認する。確認ができたとき，通信④では，チケット発行サーバTは，次のデータをクライアントCに応答する。</p>
<p><img src="img/22f_pm_q04_06.png"></p>
<p>　第3段階は，APサーバS用チケットの提示である（図2中の通信⑤）。<br/>
　通信⑤では，クライアントCは，次のデータをAPサーバSに送信する。</p>
<p><img src="img/22f_pm_q04_07.png"></p>
<p>　APサーバSは，TICKET<sub>CS</sub>を送信したのが間違いなくクライアントCであることをTICKET<sub>CS</sub>とAUTH<sub>C2</sub>から確認する。確認ができたとき，利用者は，クライアントCから，APサーバSへのアクセスが許可される。</p>
<hr>
<p><a name="41"><strong>設問</strong></a>　本文中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>aに関する解答群<br/>
ア　C-T間のセッション鍵KEY<sub>CT</sub><br/>
イ　チケット発行サーバTのID ID<sub>T</sub><br/>
ウ　チケット発行サーバTの鍵KEY<sub>T</sub><br/>
エ　利用者ID ID<sub>C</sub></p>
<p>b，cに関する解答群<br/>
ア　APサーバSのID ID<sub>S</sub><br/>
イ　APサーバSの鍵KEY<sub>S</sub><br/>
ウ　C-S間のセッション鍵KEY<sub>CS</sub><br/>
エ　C-T間のセッション鍵KEY<sub>CT</sub><br/>
オ　チケット発行サーバTの鍵KEY<sub>T</sub></p>
<p>dに関する解答群<br/>
ア　APサーバSの鍵KEY<sub>S</sub><br/>
イ　C-S間のセッション鍵KEY<sub>CS</sub><br/>
ウ　C-T間のセッション鍵KEY<sub>CT</sub><br/>
エ　チケット発行サーバTの鍵KEY<sub>T</sub></p>
<hr>
<a href="22F_P_A2.HTM#41">設問の正解例と解説へ</a>
<hr>
<a href="INDEX.HTM">■メニューへ戻る</a>
<hr>
<p><a name="50"><strong>問5</strong></a>　部品の棚卸金額計算に関する次の記述を読んで，設問1～5に答えよ。</p>
<p>　製造業が，製品製造のために購入する部品は，同じ部品であっても，その調達時期によって購入時の単価（以下，購入単価という）が変動する場合がある。したがって，期末時点で在庫となっている部品の棚卸金額を求める場合，個々の購入単価と数量を使って計算する。<br/>
　しかし，大量生産を行う製造業のT社では，必要な部品の種類と数量が非常に多い。購入した部品を受け入れて在庫とし，在庫から部品を払い出して製品を製造するまで，部品の一つ一つを管理することは難しく，実際に在庫となっている個々の部品の購入単価から金額を計算することは困難である。<br/>
　部品を受け入れた日付を受入日付，受け入れた数量を受入数量，払い出した日付を払出日付，払い出した数量を払出数量という。<br/>
　T社では，先入先出法によって，購入した部品の棚卸金額を計算している。先入先出法とは，受入日付が最も古い部品から順に払出しが行われたものとみなして，購入した部品の棚卸金額を計算する方法である。</p>
<p>〔棚卸金額計算の処理〕<br/>
　図1に，T社が購入した部品の棚卸金額計算処理の流れを示す。この処理で扱うファイルは，すべて順ファイルである。</p>
<p><img src="img/22f_pm_q05_01.png"><br/>
<strong>図1　T社が購入した部品の棚卸金額計算処理の流れ</strong></p>
<p>（1）受入情報作成処理では，期首在庫ファイルと，期中の部品の受入れを記録した期中受入れファイルの二つを整列して併合し，受入情報ファイルとして出力する。<br/>
　受入情報ファイルのレコード様式は，次のとおりである。部品は，部品番号で管理している。</p>
<p><img src="img/22f_pm_q05_02.png"><br/>
<strong>図2　受入情報ファイルのレコード様式</strong></p>
<p>　なお，T社の場合，同じ部品を同じ日に複数回受け入れることはない。<br/>
（2）払出情報作成処理では，期中の部品の払出しを記録した期中払出しファイルを用いて払出数量の集計を行い，払出情報ファイルを出力する。<br/>
（3）棚卸計算処理では，突合せを行い，期末在庫ファイルと棚卸金額ファイルを作成する。</p>
<p>　図3に，棚卸計算処理の流れを示す。<br/>
　受入情報ファイルと払出情報ファイルとの突合せによって，払出情報ファイルのレコードの払出数量分を，受入情報ファイルの受入日付が古いレコードから順に引き当てていく。引き当てられずに残った受入情報ファイルのレコードの数量と購入単価を使って，期末在庫ファイルと棚卸金額ファイルのレコードを作成する。<br/>
　数量が0となった受入情報ファイルのレコードは，期末在庫ファイルには出力しない。また，期末在庫ファイルは，次期の期首在庫ファイルとなる。期末在庫ファイルと期首在庫ファイルは，受入情報ファイルと同じレコード様式である。</p>
<p><img src="img/22f_pm_q05_03.png"><br/>
<strong><font size="2">注</strong>　KH，KU，H，Uは作業領域である。最大値は，突合せキーが取り得る値よりも大きな値である。</font><br/>
<strong>図3　棚卸計算処理の流れ</strong></p>
<hr>
<p><strong><a name="51">設問1</a></strong>　図1中の受入情報作成処理では，期首在庫ファイル及び期中受入れファイルを昇順に整列して併合し，受入情報ファイルとして出力する。整列に最低限必要なキー項目とその並びとして正しい答えを，解答群の中から選べ。ただし，解答群の項目の並びは，左の項目の方が整列の優先度が高い。</p>
<p>解答群<br/>
ア　受入日付<br/>
イ　受入日付，受入数量<br/>
ウ　受入日付，部品番号<br/>
エ　部品番号<br/>
オ　部品番号，受入日付<br/>
カ　部品番号，購入単価</p>
<hr>
<a href="22F_P_A2.HTM#51">設問1の正解例と解説へ</a>
<hr>
<p><strong><a name="52">設問2</a></strong>　図1中の払出情報ファイルに最低限必要な項目として正しい答えを，解答群の中から選べ。</p>
<p>解答群<br/>
ア　受入日付，払出数量<br/>
イ　受入日付，払出数量，払出日付<br/>
ウ　受入日付，払出数量，部品番号<br/>
エ　払出数量，払出日付<br/>
オ　払出数量，払出日付，部品番号<br/>
カ　払出数量，部品番号</p>
<hr>
<a href="22F_P_A2.HTM#52">設問2の正解例と解説へ</a>
<hr>
<p><strong><a name="53">設問3</a></strong>　図1中の払出情報作成処理では，払出数量の集計を行う。この集計処理に最低限必要なキー項目として正しい答えを，解答群の中から選べ。</p>
<p>解答群<br/>
ア　受入日付<br/>
イ　受入日付，払出日付<br/>
ウ　受入日付，部品番号<br/>
エ　払出日付<br/>
オ　払出日付，部品番号<br/>
カ　部品番号</p>
<hr>
<a href="22F_P_A2.HTM#53">設問3の正解例と解説へ</a>
<hr>
<p><strong><a name="54">設問4</a></strong>　図3中のP1～P3のうち，“受入情報読込み“が入るすべての箇所の組合せとして正しい答えを，解答群の中から選べ。</p>
<p>解答群<br/>
ア　P1<br/>
イ　P2<br/>
ウ　P3<br/>
エ　P1，P2<br/>
オ　P1，P3<br/>
カ　P2，P3<br/>
キ　P1，P2，P3</p>
<hr>
<a href="22F_P_A2.HTM#54">設問4の正解例と解説へ</a>
<hr>
<p><strong><a name="55">設問5</a></strong>　図3中の条件C1，C2に入れる組合せとして正しい答えを，解答群の中から選べ。</p>
<p>解答群<br/>
<img src="img/22f_pm_q05_04.png"><br/></p>
<hr>
<a href="22F_P_A2.HTM#55">設問5の正解例と解説へ</a>
<hr>
<a href="INDEX.HTM">■メニューへ戻る</a>
<hr>
<a href="22F_P_E3.HTM">■問6へ進む</a>
<hr>
</blockquote>
</body>
</html>
