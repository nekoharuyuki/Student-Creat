<html>

<head>
<title>平成19年度 春期 基本情報技術者試験 午後 問題</title>
<style type="text/css">
body{line-height:150%;}
code{font-size:12pt;}
</style>
</head>

<body>

<blockquote>
<hr>
<h3 align="center">平成19年度春期試験　問題(問6～問9)</h3>
<div align="center">
<table borderColor="#000000" cellSpacing="0" cellPadding="4" border="1">
<tr>
<td>　次の<strong>問6</strong>から<strong>問9</strong>までの4問については、この中から1問を選択し、答案用紙の選択欄の（選）をマークして解答してください。<br>
　なお、2問以上選択した場合には、はじめの1問について採点します。</td>
</tr>
</table>
</div>
<hr>
<p><strong><a name="60">問6</a></strong>　次のCプログラムの説明及びプログラムを読んで，設問1，2に答えよ。</p>
<p>〔プログラムの説明〕</p>
<p>
（1）双六（すごろく）のプログラムである。双六とは，図のような一本道のコース上にある升（ます）を，“ふりだし”の位置からスタートして，プレーヤが順番にさいころ2個を振って，出た目の和だけ駒（こま）を進め，早く“上がり”（ゴール）の位置にたどり着いたプレーヤを勝ちとする遊びである。</p>
<p><img border="0" src="IMAGE/pm-q6-1.png" width="587" height="249"></p>
<p>（2）双六の進め方は，次のとおりである。</p>
<blockquote>
<p>①　プレーヤは“ふりだし”の升に各自の駒を置き，さいころを振る順番を決める。</p>
<p>②　順番にさいころを振って，出た目の和だけ“上がり”方向に駒を進める。</p>
<p>
③“上がり”，の升に到達すると，そのプレーヤの勝ちとなり，そこでプログラムが終了する。目の和だけ駒を進めた結果が“上がり”の升を超えた場合も，“上がり”とする。</p>
<p>④　升には順番に番号が割り当てられている。番号0の升が“ふりだし”であり，番号23の升が“上がり”である。</p>
<p>⑤　升には番号のほかに，到達時の動作指示が割り当てられているものがある。　動作指示には，次の2種類があり，その指示に従う。</p>
<p>（a）移動の指示：　指示された番号の升に駒を移動する。移動先の升に動作指示がある場合は，その指示に従う。<br>
（b）1回休みの指示：　次に順番が回ってきたとき，“さいころを振る番”を1回休む。</p>
</blockquote>
<p>（3）プレーヤは，4人とする。</p>
<p>（4）動作指示は，配列<code>actype</code>及び<code>celinf</code>に設定されている。</p>
<p>（5）次の関数が，あらかじめ定義されているものとする。</p>
<blockquote>
<p>①　関数<code>dice</code><br>
　　　機能：　引数で指定されたプレーヤに対してさいころを振る番が来たことを示すメッセージを表示する。プレーヤが改行キーを入力すると，乱数によって2個のさいころの目の和を決めて，その値を表示し，返却値とする。<br>
　　　呼出し形式：　<code>int dice(int playerid);</code><br>
　　　引数：　<code>playerid</code>　プレーヤ番号（0～3）<br>
　　　返却値：　さいころの目の和（2～12の整数値）</p>
<p>②　関数<code>prtpiece</code><br>
　　機能：　引数で指定されたプレーヤの駒が現在置かれている升の番号と，升に割り当てられている動作指示の内容を表示する。<br>
　　　呼出し形式：　<code>void prtpiece(int playerid);</code><br>
　　　引数：　<code>playerid</code>　プレーヤ番号（0～3）<br>
　　　返却値：　なし</p>
</blockquote>
<p><img border="0" src="IMAGE/pm-q6-2.png" width="587" height="758"></p>
<hr>
<p><strong><a name="61">設問1</a></strong>　プログラム中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>a，bに関する解答群</p>
<table border="0" cellpadding="0" cellspacing="16" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber1">
<tr>
<td>ア</td>
<td><code>actype[curpos[playerid]] != 0</code></td>
</tr>
<tr>
<td>イ</td>
<td><code>actype[curpos[playerid]] &lt;= 3</code></td>
</tr>
<tr>
<td>ウ</td>
<td><code>curpos[playerid] == 0</code></td>
</tr>
<tr>
<td>エ</td>
<td><code>curpos[playerid] &gt;=　CELLS - 1</code></td>
</tr>
<tr>
<td>オ</td>
<td><code>gamestatus == 0</code></td>
</tr>
<tr>
<td>カ</td>
<td><code>gamestatus == 1</code></td>
</tr>
<tr>
<td>キ</td>
<td><code>playmode[playerid] == PLAY</code></td>
</tr>
<tr>
<td>ク</td>
<td><code>playmode[playerid] == WAIT</code></td>
</tr>
</table>
<p>cに関する解答群</p>
<table border="0" cellpadding="0" cellspacing="16" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber2">
<tr>
<td>ア</td>
<td><code>playerid = playerid % PLAYERS + 1</code></td>
</tr>
<tr>
<td>イ</td>
<td><code>playerid = playerid % (PLAYERS + 1)</code></td>
</tr>
<tr>
<td>ウ</td>
<td><code>playerid = (playerid + 1) % PLAYERS</code></td>
</tr>
<tr>
<td>エ</td>
<td><code>playerid += 1</code></td>
</tr>
<tr>
<td>オ</td>
<td><code>playerid += playerid / (PLAYERS - 1)</code></td>
</tr>
</table>
<hr>
<p><a href="19S_P_A3.HTM#61">設問1の正解例と解説へ</a></p>
<hr>
<p><strong><a name="62">設問2</a></strong>　到達時の動作指示として，“続けてさいころを振り，駒を進める”を追加することにした。そのために<code>switch</code>文での<code>actype[curpos[playerid]]</code>の値が3のときに，次の処理群を挿入する。［　　　　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p><img border="0" src="IMAGE/pm-q6-3.png" width="587" height="78"></p>
<p>解答群</p>
<table border="0" cellpadding="0" cellspacing="16" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber3">
<tr>
<td>ア</td>
<td><code>curpos[playerid] = celinf[curpos[playerid]]</code></td>
</tr>
<tr>
<td>イ</td>
<td><code>curpos[playerid] = celinf[curpos[playerid]] + dice(playerid)</code></td>
</tr>
<tr>
<td>ウ</td>
<td><code>curpos[playerid] += celinf[curpos[playerid] + dice(playerid)]</code></td>
</tr>
<tr>
<td>エ</td>
<td><code>curpos[playerid] += dice(playerid)</code></td>
</tr>
<tr>
<td>オ</td>
<td><code>playmode[playerid] = PLAY</code></td>
</tr>
</table>
<hr>
<p><a href="19S_P_A3.HTM#62">設問2の正解例と解説へ</a></p>
<hr>
<p><a href="INDEX.HTM">■メニューへ戻る</a></p>
<hr>
<p><strong><a name="70">問7</a></strong> 　次のCOBOLプログラムの説明及びプログラムを読んで，設問1，2に答えよ。</p>
<p>〔プログラムの説明〕</p>
<p>
　選挙速報を画面に表示するプログラムである。あるテレビ局では，地方自治体の首長選挙において，地区ごとの開票情報を収集し，候補者ごとの得票数を集計して表示するプログラムを開発した。</p>
<p>（1）地区ごとの開票情報を記録した開票ファイルのレコード様式は，次のとおりである。</p>
<p><img border="0" src="IMAGE/pm-q7-1.png" width="587" height="55"></p>
<p>（2）選挙速報の表示様式は，次のとおりである。</p>
<p><img border="0" src="IMAGE/pm-q7-2.png" width="587" height="89"></p>
<p>　①　選挙速報は，得票数の降順に表示する。<br>
　②　見出しは，あらかじめ表示されている。</p>
<p>（3）候補者数は最大50人，得票数は最大9けたとし，データに誤りはないものとする。</p>
<p><img border="0" src="IMAGE/pm-q7-3.png" width="587" height="894"></p>
<hr>
<p><strong><a name="71">設問1</a></strong>　プログラム中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>解答群</p>
<table border="0" cellpadding="0" cellspacing="16" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber4">
<tr>
<td>ア</td>
<td><code>ADD K-TOKUHYO-SU TO S-TOKUHYO-SU(S-IDX)</code></td>
</tr>
<tr>
<td>イ</td>
<td><code>ADD K-TOKUHYO-SU TO S-TOKUHYO-SU(S-MAX)</code></td>
</tr>
<tr>
<td>ウ</td>
<td><code>MOVE K-TOKUHYO-SU TO S-TOKUHYO-SU(S-MAX)</code></td>
</tr>
<tr>
<td>エ</td>
<td><code>MOVE S-TBL(W-I) TO S-TBL(W-J)</code></td>
</tr>
<tr>
<td>オ</td>
<td><code>MOVE S-TBL(W-J) TO S-TBL(W-I)</code></td>
</tr>
</table>
<hr>
<p><code><a href="19S_P_A3.HTM#71">設問1の正解例と解説へ</a></code></p>
<hr>
<p><strong><a name="72">設問2</a></strong>　このプログラムの動作を検証するための命令網羅テストにおいて，開票ファイルとして適切なデータの並びを，解答群の中から選べ。</p>
<p>解答群</p>
<p><img border="0" src="IMAGE/pm-q7-4.png" width="587" height="425"></p>
<hr>
<p><a href="19S_P_A3.HTM#72">設問2の正解例と解説へ</a></p>
<hr>
<p><a href="INDEX.HTM">■メニューへ戻る</a></p>
<hr>
<p><strong><a name="80">問8</a></strong> 　次のJavaプログラムの説明及びプログラムを読んで，設問に答えよ。<br>
　（<a href="../19S_PM/java.htm">Javaプログラムで使用するAPIの説明は，この冊子の末尾を参照してください。</a>）</p>
<p>〔プログラムの説明〕<br>
　英語の月名（<code>January</code>，…，<code>December</code>）を2種類の順序に並べ替えるプログラムである。月名は，文書の索引などを作成する場合は辞書順に並べ替える必要があるが，日付の一部として並べ替えるときは月の順番に並んだ方が都合がよい。並べ替えは，次のクラスメソッドを呼び出して行う。</p>
<blockquote>
<p><code>java.util.Arrays.sort(Object[], java.util.Comparator)</code></p>
</blockquote>
<p>
　このメソッドは，引数で与えられた<code>Comparator</code>のインスタンスのメソッド<code>compare</code>を呼び出して配列中の要素を比較し，並べ替える。ここでは，インタフェース<code>Comparator</code>を実装する次の二つのクラスを定義する。</p>
<p>（1）クラス<code>NameComparator</code>は，引数で与えられた文字列を小文字の文字列に変換し，クラス<code>String</code>のメソッド<code>compareTo</code>を呼び出して比較した結果を返すメソッドを実装している。</p>
<p>（2）クラス<code>ValueComparator</code>は，引数で与えられた文字列（月名）を月の値（例えば，<code>April</code>は<code>4</code>）に変換し，月の値で比較した結果を返すメソッドを実装している。引数の文字列は，大文字と小文字を区別しない。月名は，<code>Jan</code>，<code>Feb</code>など，3文字の省略形を指定してもよい。</p>
<p>　ただし，二つのクラスともメソッド<code>compare</code>に与えられる月名は正しいものとする。<br>
<br>
クラス<code>MonthNameSorter</code>は，上記の二つの<code>Comparator</code>を実装したクラスを用いて，月名を並べ替える。メソッド<code>main</code>を実行した結果を，次に示す。</p>
<p><img border="0" src="IMAGE/pm-q8-1.png" width="587" height="83"></p>
<p>〔プログラム1〕</p>
<p><img border="0" src="IMAGE/pm-q8-2.png" width="587" height="155"></p>
<p>〔プログラム2〕</p>
<p><img border="0" src="IMAGE/pm-q8-3.png" width="587" height="445"></p>
<p>〔プログラム3〕</p>
<p><img border="0" src="IMAGE/pm-q8-4.png" width="587" height="275"></p>
<hr>
<p><strong><a name="81">設問</a></strong>　プログラム中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>aに関する解答群</p>
<table border="0" cellpadding="0" cellspacing="16" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber5">
<tr>
<td>ア</td>
<td><code>Comparator&lt;int&gt;</code></td>
<td>イ</td>
<td><code>Comparator&lt;Integer&gt;</code></td>
</tr>
<tr>
<td>ウ</td>
<td><code>Comparator&lt;Object&gt;</code></td>
<td>エ</td>
<td>エ　<code>Comparator&lt;String&gt;</code></td>
</tr>
</table>
<p>bに関する解答群</p>
<table border="0" cellpadding="0" cellspacing="16" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber6">
<tr>
<td>ア</td>
<td><code>i &lt; monthNames.length</code></td>
<td>イ</td>
<td><code>i &lt;= monthNames.length</code></td>
</tr>
<tr>
<td>ウ</td>
<td><code>i &gt; monthNames.length</code></td>
<td>エ</td>
<td>エ　<code>i &gt;= monthNames.length</code></td>
</tr>
</table>
<p>cに関する解答群</p>
<table border="0" cellpadding="0" cellspacing="16" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber7">
<tr>
<td>ア</td>
<td><code>map.get(ls1) + map.get(ls2)</code></td>
<td>イ</td>
<td><code>map.get(ls1) - map.get(ls2)</code></td>
</tr>
<tr>
<td>ウ</td>
<td><code>map.get(ls1) / map.get(ls2)</code></td>
<td>エ</td>
<td><code>map.get(ls2) - map.get(ls1)</code></td>
</tr>
</table>
<p>dに関する解答群</p>
<table border="0" cellpadding="0" cellspacing="16" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber8">
<tr>
<td>ア</td>
<td><code>new Comparator()</code></td>
<td>イ</td>
<td><code>new Comparator&lt;String&gt;()</code></td>
</tr>
<tr>
<td>ウ</td>
<td><code>new ValueComparator()</code></td>
<td>エ</td>
<td><code>new ValueComparator&lt;String&gt;()</code></td>
</tr>
</table>
<hr>
<p><a href="19S_P_A3.HTM#81">設問の正解例と解説へ</a></p>
<hr>
<p><a href="INDEX.HTM">■メニューへ戻る</a></p>
<hr>
<p><strong><a name="90">問9</a></strong> 　次のアセンブラプログラムの説明及びプログラムを読んで，設問1～3に答えよ。</p>
<p>〔プログラムの説明〕<br>
　副プログラム<code>SYMTST</code>は，16ビットからなるビット列が左右対称かどうかを検査するプログラムである。図に左右対称なビット列の例を示す。</p>
<p><img border="0" src="IMAGE/pm-q9-1.png" width="587" height="67"></p>
<p>（1）ビット列は<code>GR1</code>に設定されて，主プログラムから渡される。<br>
（2）ビット列が左右対称であれば<code>GR0</code>に1を，そうでなければ0を設定して主プログラムに返す。<br>
（3）副プログラムから戻るとき，汎用レジスタ<code>GR1</code>～<code>GR7</code>の内容は元に戻す。</p>
<p>〔プログラム〕</p>
<p><img border="0" src="IMAGE/pm-q9-2.png" width="587" height="325"></p>
<hr>
<p><strong><a name="91">設問1</a></strong>　プログラム中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>解答群</p>
<table border="0" cellpadding="0" cellspacing="16" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber9">
<tr>
<td>ア　<code>JMI LOOP</code> </td>
<td>イ　<code>JOV NG</code></td>
<td>ウ　<code>JOV OFLOW</code></td>
</tr>
<tr>
<td>エ　<code>JOV OK</code></td>
<td>オ　<code>JPL LOOP</code></td>
<td>カ　<code>JZE LOOP</code></td>
</tr>
</table>
<hr>
<p><a href="19S_P_A3.HTM#91">設問1の正解例と解説へ</a></p>
<hr>
<p><strong><a name="92">設問2</a></strong>　ビット列が図のとおりであった場合，行番号17のマクロ命令<code>RPOP</code>の実行直前における<code>GR2</code>の内容として正しい答えを，解答群の中から選べ。</p>
<p>解答群</p>
<p><img border="0" src="IMAGE/pm-q9-3.png" width="587" height="171"></p>
<hr>
<p><a href="19S_P_A3.HTM#92">設問2の正解例と解説へ</a></p>
<hr>
<p><strong><a name="93">設問3</a></strong>　ビット列が次のとおりであった場合（▲で示されるビットが左右対称ではない場合），行番号10の<code>SRL</code>命令は何回実行されるか。正しい答えを，解答群の中から選べ。</p>
<p><img border="0" src="IMAGE/pm-q9-4.png" width="587" height="53"></p>
<p>解答群</p>
<p>　ア　1　　　イ　2　　　ウ　3　　　エ　4</p>
<hr>
<p><a href="19S_P_A3.HTM#93">設問3の正解例と解説へ</a></p>
<hr>
<p><a href="19S_P_E4.htm#100">問10へ進む</a></p>
<hr>
<p><a href="INDEX.HTM">■メニューへ戻る</a></p>
</blockquote>

</body>

</html>
