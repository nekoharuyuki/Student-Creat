<html>
<head>
<title>平成23年度 春期 基本情報技術者 午後 正解例と解説（問1～問2）　特別試験</title>
<style type="text/css"><!--
body{line-height:150%;}
code{font-size:12pt;}
h3{text-align:center;}
div.caution{border:solid 1px #000000; padding:0.5em;}
--></style>
</head>
<body>
<blockquote>
<hr>
<h3>平成23年度　春期　基本情報技術者　特別試験<br/>
午後　正解例と解説（問1～問2）</h3>
<hr>
<p><strong><a name="10">問1</a></strong></p>
<hr>
<p><strong><a name="11">設問1</a></strong></p>
<p>〈解答〉　a：ア，b：エ，b：オ</p>
<p>〈解説〉</p>
<p>●空欄aについて<br/>
○700番地の命令語1は1語命令で，上位8ビットの命令コードは20hである。下位8ビットは42hで，これは2進数で01000010だから，レジスタ番号r<sub>1</sub>＝1，レジスタ番号r<sub>2</sub>＝0，D＝1，I＝0となり，間接アドレス指定は行わない。表3より，ソースレジスタはr<sub>2</sub>で指定されたレジスタ0となる。つまり，命令語1による動作は，レジスタ番号r<sub>2</sub>で指定されるレジスタ0の内容を，レジスタ番号r<sub>1</sub>で指定されるレジスタ1に設定する。レジスタ0の内容は最初100なので，レジスタ1に100が設定される。</p>
<p><img src="img/h23_pm_a1_1.png"/></p>
<p>○701番地の命令語2は1語命令で，上位8ビットの命令コードは10hである。下位8ビットはD2hで，これは2進数で11010010だから，レジスタ番号r<sub>1</sub>＝3，レジスタ番号r<sub>2</sub>＝1，D＝1，I＝0となり，間接アドレス指定は行わない。表3より，ソースレジスタはr<sub>2</sub>で指定されたレジスタ1となる。つまり，命令語2による動作は，レジスタ番号r<sub>2</sub>で指定されるレジスタ1の内容を，レジスタ番号r<sub>1</sub>で指定されるレジスタ3に加算する。レジスタ1の内容は命令語1により100に更新されているため，命令語2によりレジスタ3の内容400に100が加算されて500に更新される。したがって，命令語2の実行が終わった時点でのレジスタ番号1のレジスタの内容は，命令語1の実行が終わった時点と同じ100のままであり，空欄aはアが適切。</p>
<p><img src="img/h23_pm_a1_2.png"/></p>
<p>●空欄bについて<br/>
○702～703番地の命令語3は2語命令で，1語目の上位8ビットの命令コードは30hである。1語目の下位8ビットは90hで，これは2進数で10010000だから，レジスタ番号r<sub>1</sub>＝2，指標レジスタ番号X＝1，D＝0，Iが0となり，指標レジスタ修飾を行うが，間接アドレス指定は行わない。D＝0，I＝0なので，表2より，実効アドレスはadr＋[Xで指定されたレジスタ]となる。2語目の主記憶のアドレスadrは0番地，X＝1なので，指標レジスタ修飾による実効アドレスは，
<br/>
　adr＋[Xで指定されたレジスタ]＝0＋[レジスタ番号1]＝0＋100＝100<br/>
<br/>
と算出される（0＋レジスタ1の内容で0＋100番地になる）。つまり，命令語3による動作は，レジスタ番号r<sub>1</sub>で指定されるレジスタ2の内容を，実効アドレス100番地に格納する。レジスタ2の内容は300だから，命令語3により実効アドレス100番地には300が格納される。</p>
<p><img src="img/h23_pm_a1_3.png"/></p>
<p>○704番地の命令語4は1語命令で，上位8ビットの命令コードは10hである。下位8ビットは13hで，これは2進数では00010011だから，レジスタ番号r<sub>1</sub>＝0，レジスタ番号r<sub>2</sub>＝1，D＝1，I＝1となり，間接アドレス指定を行う。D＝1，I＝1なので，表2より，実効アドレスは[r<sub>2</sub>で指定されたレジスタ]となる。つまり，レジスタ番号r<sub>2</sub>で指定されるレジスタ1の内容100が実効アドレスになる。この場合は間接アドレス指定を行うため，命令語4による動作は，実効アドレス100番地の内容300を，レジスタ番号r<sub>1</sub>で指定されるレジスタ0に加算する。レジスタ0の内容は100だから，命令語4によりレジスタ0の内容100に300が加算されて400に更新される。</p>
<p><img src="img/h23_pm_a1_4.png"/></p>
<p>○705番地の命令語5は700番地の命令コードと同じで，表3よりソースレジスタはr<sub>2</sub>で指定されたレジスタ0となる。レジスタ番号r<sub>2</sub>で指定されるレジスタ0の内容を，レジスタ番号r<sub>1</sub>で指定されるレジスタ1に設定する。レジスタ0の内容は直前の命令語4により400に更新されているため，レジスタ1に400が設定される。</p>
<p>したがって命令語5の実行が終わった時点での，レジスタ番号1のレジスタの内容は400となり，空欄bはエが適切。</p>
<p><img src="img/h23_pm_a1_5.png"/></p>
<p>●空欄cについて<br/>
命令語5の実行が終わった時点での，レジスタ番号3のレジスタの内容は，命令語2により500に更新された後，変更がなく500のままである。したがって空欄cはオが適切。</p>
<hr>
<a href="23S_P_E1.HTM#11">問題へ</a>
<hr>
<p><strong><a name="12">設問2</a></strong></p>
<p>〈解答〉　エ</p>
<p>〈解説〉</p>
<p>ア～オの命令語は，命令コードが20hなので，実効アドレスに格納されている内容，又はソースレジスタの内容を，r<sub>1</sub>で指定されたレジスタに設定する命令である。</p>
<p>○アの命令語は2語命令で，D＝0，I＝1なので，表2より実効アドレスは[adr＋[Xで指定されたレジスタ]]で算出する。X＝2，adr＝0なので，実効アドレスは，[0＋[レジスタ番号2]]となる。レジスタ番号2のレジスタの内容は100，2語目の主記憶のアドレスは0000hなので，指標レジスタ修飾によるアドレスは0＋100＝100番地になる。この場合，Iが1なので間接アドレス指定により，実効アドレスは<br/>
<br/>
　[0＋[レジスタ番号2]]＝[0＋100]＝[100]＝101<br/>
<br/>
つまり100番地の内容101となり，101番地の内容100がレジスタ1に設定される。</p>
<p><img src="img/h23_pm_a1_6.png"/></p>
<p>○イの命令語は1語命令で，Iが0なので間接アドレス指定は行わず，レジスタ番号2のソースレジスタの内容を，レジスタ番号1のレジスタに設定する。したがって，この場合レジスタ番号2のレジスタの内容100が，レジスタ番号1のレジスタに設定される。</p>
<p>○ウの命令語は2語命令で，Iが0なので間接アドレス指定は行わず，レジスタ番号3のレジスタを指標レジスタとする指標レジスタ修飾により算出した実効アドレスの内容を，レジスタ番号1のレジスタに設定する。レジスタ番号3のレジスタの内容は101，2語目の主記憶のアドレスは0000hなので，指標レジスタ修飾による実効アドレスは0＋101＝101番地になる。したがって，この場合は，実効アドレス101番地の内容100がレジスタ1に設定される。</p>
<p><img src="img/h23_pm_a1_7.png"/></p>
<p>○エの命令語は2語命令で，D＝0，I＝1なので，表2より実効アドレスは[adr＋[Xで指定されたレジスタ]]で算出する。X＝3，adr＝0なので，実効アドレスは，[0＋[レジスタ番号3]]となる。レジスタ番号3のレジスタの内容は101，2語目の主記憶のアドレスは0000hなので，指標レジスタ修飾によるアドレスは0＋101＝101番地になる。この場合，Iが1なので間接アドレス指定により，実効アドレスは<br/>
　[0＋[レジスタ番号3]]＝[0＋101]＝[101]＝100<br/>
となる。したがって，この場合は間接アドレス指定により，アドレス101番地の内容100が実効アドレスとなり，100番地の内容101がレジスタ1に設定される。</p>
<p><img src="img/h23_pm_a1_8.png"/></p>
<p>○オの命令語は1語命令で，Iが1なので間接アドレス指定により，レジスタ番号3の内容が指す番地の内容を，レジスタ番号1のレジスタに設定する。したがって，この場合は間接アドレス指定により，レジスタ番号3の内容101が指す番地の内容100が，レジスタ1に設定される。<br/>
したがって，レジスタ番号1のレジスタに100ではなく，101が設定されるエの命令語が誤りとなる。</p>
<hr>
<a href="23S_P_E1.HTM#12">問題へ</a>
<hr>
<a href="INDEX.HTM">■メニューへ戻る</a>
<hr>
<p><strong><a name="21">問2</a></strong></p>
<hr>
<p><strong><a name="21">設問1</a></strong></p>
<p>〈解答〉　a：オ，b：ウ</p>
<p>〈解説〉</p>
<p>●空欄aについて<br/>
到着順方式では，到着順に待ち行列の末尾に登録し，実行中のプロセスが終了するのを待った後，待ち行列の先頭からプロセスを一つ取り出して実行するため，次のようなタイムチャートになる。</p>
<p><img src="img/h23_pm_a2_1.png"/></p>
<p>ターンアラウンドタイムは，プロセスが待ち行列に到着してから実行が終了するまでの時間なので，各プロセスのターンアラウンドタイムは，次のようになる。</p>
<p>プロセスAのターンアラウンドタイム＝180ミリ秒<br/>
プロセスBのターンアラウンドタイム＝180＋80－10＝250ミリ秒<br/>
プロセスAのターンアラウンドタイム＝180＋80＋40－30＝270ミリ秒<br/>
プロセスAのターンアラウンドタイム＝180＋80＋40＋20－50＝270ミリ秒<br/>
したがって，到着順方式のターンアラウンドタイムの平均は<br/>
（180＋250＋270＋270）÷4＝242.5ミリ秒</p>
<p>●空欄bについて
ラウンドロビン方式では，到着順に待ち行列の末尾に登録し，実行中のプロセスが終了するか，又はタイムクオンタムの20ミリ秒が経過すると，実行を中断して待ち行列の末尾に登録し，待ち行列の先頭からプロセスを一つ取り出して実行する。待ち行列には次の順に登録されるため，タイムチャートは次のようになる。</p>
<p><img src="img/h23_pm_a2_2.png"/></p>
<p>プロセスAのターンアラウンドタイム＝20×11＋100＝320ミリ秒<br/>
プロセスBのターンアラウンドタイム＝20×11－10＝210ミリ秒<br/>
プロセスCのターンアラウンドタイム＝20×8－30＝130ミリ秒<br/>
プロセスDのターンアラウンドタイム＝20×6－50＝70ミリ秒<br/>
したがって，ラウンドロビン方式のターンアラウンドタイムの平均は
（320＋210＋130＋70）÷4＝182.5ミリ秒</p>
<hr>
<a href="23S_P_E1.HTM#21">問題へ</a>
<hr>
<p><strong><a name="22">設問2</a></strong></p>
<p>〈解答〉　c：ウ，d：オ</p>
<p>〈解説〉</p>
<p>●空欄c，dについて<br/>
プロセスA，B，Cのタイムチャートは，次のようになる。</p>
<p><img src="img/h23_pm_a2_3.png"/></p>
<p>初期状態では，プロセスA，B，Cがそれぞれ優先度6，優先度8，優先度5の待ち行列に登録されている。</p>
<p>①最初に優先度8の最も高いプロセスBを取り出して実行し，20ミリ秒経過ごとに優先度を1ずつ下げ，60ミリ秒経過後に優先度が5になる。このとき実行可能状態にあるプロセスAの優先度6のほうが高くなるので，プロセスBの実行を中断し，優先度5の待ち行列の末尾に登録する。優先度5の待ち行列には初期状態で既にプロセスCが登録されているため，その後に登録される。<br/>
②次に優先度が最も高い優先度6のプロセスAが実行され，20ミリ秒経過ごとに優先度を1ずつ下げ，40ミリ秒経過後に優先度が4になる。このとき実行可能状態にあるプロセスB，Cの優先度5のほうが高くなるので，プロセスAの実行を中断し，優先度4の待ち行列の末尾に登録する。優先度4の待ち行列には初期状態で登録されているプロセスがないため，プロセスAは先頭に登録される。<br/>
③次に優先度5の待ち行列から先頭に登録されているプロセスCを取り出して実行し，20ミリ秒経過後に優先度が4になる。このとき優先度5の待ち行列に登録されているプロセスBの優先度のほうが高くなるので，プロセスCの実行を中断し，優先度4の待ち行列の末尾に登録する。優先度4の待ち行列には既にプロセスAが登録されているため，その後に登録される。<br/>
④次に優先度5の待ち行列から先頭に登録されているプロセスBを取り出して実行する。プロセスBの処理時間は70ミリ秒で，既に60ミリ秒の処理を実行していますので，残りの10ミリ秒の処理を実行した後，終了する。20ミリ秒経過前に終了するので，プロセスBは優先度5の状態で最初に終了することになる。<br/>
⑤次に優先度4の待ち行列から先頭に登録されているプロセスAを取り出して実行する。プロセスAの処理時間は60ミリ秒で，既に40ミリ秒の処理を実行しているので，残りの20ミリ秒の処理を実行した後，優先度は3の状態で終了する。<br/>
⑥最後に優先度4の待ち行列から残っているプロセスCを取り出して実行する。プロセスCの処理時間は100ミリ秒で，既に20ミリ秒の処理を実行しているので，残りの80ミリ秒の処理を，20ミリ秒経過ごとに優先度を1ずつ下げて実行した後，優先度1の状態で終了する。</p>
<p>したがってプロセスB，A，Cの順に終了し，プロセスBの終了時の優先度は5になるので，空欄cはウ，空欄dはオが適切。</p>
<hr>
<a href="23S_P_E1.HTM#22">問題へ</a>
<hr>
<a href="INDEX.HTM">■メニューへ戻る</a>
<hr>
</blockquote>
</body>
</html>
