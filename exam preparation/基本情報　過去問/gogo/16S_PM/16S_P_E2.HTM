<HTML>
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=shift_jis">
<meta http-equiv="Content-Language" content="ja">
<TITLE>平成16年度春期試験　問題(問3～問5)</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" topmargin="0" leftmargin="0">
<blockquote>
  <hr>
  <H3 align="center">平成16年度春期試験　問題(問3～問5)</H3>
<HR WIDTH=100%>
<A NAME="30">　<BR>
<b>
問3</b></a><b>　</b>データ圧縮の方法の一つであるハフマン符号化に関する次の記述を読んで，設問1，2に答えよ。<br>
<br>
ハフマン符号化は，圧縮対象の文字列を構成する文字の種類に注目し，その出現回数の偏りを利用した圧縮方式である。<br>
今，図1に示す100文字からなる文字列の圧縮を考える。全角1文字を16ビット（2バイト）で表現する方法の場合，この文字列は，100文字なので，1,600ビットの長さである。ここで，この文字列を構成する文字の種類とその出現回数は，図2に示すとおりであるとする。<br>
<br>
<img border="0" src="image/P_3_1.gif" width="410" height="100"><br>
<br>
<img border="0" src="image/P_3_2.gif" width="650" height="300"><br>
<br>
<HR WIDTH=100%>
</a><A NAME="31">　<BR>
<b>
設問1</b></a><b>　</b>次の記述中の［　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
<br>
対象となる文字列は，図2に示すように，37種類の文字から構成されている。37種類の文字を固定長のビット列を用いて識別するためには，1種類の文字に［　　a　　］ビットのビット列を対応させればよく，対象となる文字列は，［　　a　　］ビット／文字×100文字で計算される長さで表現できる。このとき，対象となる文字列の長さは，表に示すように，全角1文字を16ビットで表現する方式の場合を100%とすると，［　　b　　］%となる。<br>
<br>
<img border="0" src="image/P_3_01-1.gif" width="530" height="170"><br>
<br>
aに関する解答群<br>
<br>
ア　1　　　 イ　6　　　　ウ　7　　　 エ　16　　　オ　20<br>
カ　33　　　キ　37　　　ク　47　　　ケ　100<br>
<br>
bに関する解答群<br>
<br>
ア　2.3　　　　イ　6.0　　　 ウ　6.3　　　　エ　16.2<br>
オ　16.7　　　カ　37.0　　　キ　37.5　　　ク　43.2<br>
<br>

<HR WIDTH=100%>
</a>
<A HREF="16S_P_A2.HTM#31">設問1の正解例と解説へ</A>
<HR WIDTH=100%>
<A NAME="32">
<br>
〔ハフマン符号化の手順〕<br>
文字の出現回数の偏りを利用したハフマン符号化を用いれば，この文字列を更に短いビット列で表現することができる。<br>
この文字列をハフマン符号化する手順は，次のとおりである。<br>
        <table border="0" cellpadding="3" cellspacing="0">
          <tr>
            <td valign="top">（1）</td>
            <td>文字列を構成する文字の種類を，その出現回数の多い順に並べ替える。同じ出現回数の場合は，文字コードの昇順とする。また，（2）で説明する仮想の文字の場合，出現回数が同じであるときの順序は，並べ替える直前の順序に従うものとする。</td>
          </tr>
          <tr>
            <td valign="top">（2）</td>
            <td>（1）の並べ替えの結果，最下位になった文字とその一つ上位の文字の2文字をグループ化し，これを仮想の1文字として扱い，最下位に位置付ける。この仮想の文字の出現回数は，グループ化した2文字の出現回数の和とする。</td>
          </tr>
          <tr>
            <td valign="top">（3）</td>
            <td>（2）の結果，すなわち，文字の種類が一つ減った状態のものに対し，（1），（2）を，文字の種類が2種類になるまで繰り返す。</td>
          </tr>
          <tr>
            <td valign="top">（4）</td>
            <td>（3）で，最後に残った2種類の文字のそれぞれに，長さ1のビット列1又は0を対応させる。</td>
          </tr>
          <tr>
            <td valign="top">（5）</td>
            <td>（4）の2種類の文字から戻りながら各文字にビット列を対応させる。<br>
（i）1段階戻ったときの2種類の文字に対しては，直前の段階のビット列の右端に1又は0を付加したビット列をそれぞれ対応させる。<br>
（ii）元の37種類すべての文字にビット列が対応するまで（i）を行う。</td>
          </tr>
          <tr>
            <td valign="top">（6）</td>
            <td>この37種類のビット列を用いて，対象となる文字列を表現する。</td>
          </tr>
        </table>
<br>
<b>
設問2</b></a><b>　</b>次の記述中の［　　　　］に入れる正しい答えを，解答群の中から選べ。<br><br>
（1）～（3）の実際の操作は，図3に示すとおりである。ここで，①は，［　　c　　］であり，②は，［　　d　　］である。最終的に各文字に対応するビット列は，図4に示すとおりとなり，100文字からなる圧縮対象の文字列の長さは，全角1文字を16ビットで表現する方式の場合の約［　　e　　］%のビット数で表現できることになる。<br>
<br>
<img border="0" src="image/P_3_02-1.gif" width="720" height="360"><br>
<br>
このように，ハフマン符号化では，各文字に対応するビット列の長さが，その出現回数によって変わるが，符号化したビット列を先頭から見ていくことで，各文字に対応するビット列が一意に識別できるので，その復元は単純なアルゴリズムで実現できる。<br>
<br>
<img border="0" src="image/P_3_02-2.gif" width="620" height="680"><br>
<br>
c，dに関する解答群<br>
<br>
ア　25　　　　イ　32　　　　ウ　43　　　　エ　57　　　　オ　100<br>
<br>
eに関する解答群<br>
<br>
ア　3.0　　　　イ　7.0　　　　 ウ　18.8　　　　エ　30.3<br>
オ　43.8　　　カ　50.0　　　　キ　80.7　　　　ク　85.7<br>
<br>
<HR WIDTH=100%>
</a>
<A HREF="16S_P_A2.HTM#32">設問2の正解例と解説へ</A>
<HR WIDTH=100%>
<p><A HREF="index.htm">メニューへ戻る</A>　</p>
<HR WIDTH=100%>
<A NAME="40">　<BR>
<b>
問4</b></a>　次のプログラムの説明及びプログラムを読んで，設問1，2に答えよ。<br><br>
〔プログラムの説明〕<br>
1次元配列に連続して格納されている2<sup>n</sup>個の整数型データ（nは整数でn> 0）に対して，併合をn回繰り返すことによって整列を行う副プログラムmergeSortである。<br>
（1）配列input[ ]の要素を昇順に並べて配列output[ ]に格納する。<br>
（2）各配列の添字は0から始まる。<br>
（3）副プログラムmergeSortの引数の仕様を表に示す。<br>
<br>
<img border="0" src="image/P_4_1.gif" width="500" height="160"><br>
<br>
図は，1次元配列に格納されている8個のデータを3回の併合で整列する例である。<br>
<br>
<img border="0" src="image/P_4_2.gif" width="500" height="400"><br>
<br>
<img border="0" src="image/P_4_3.gif" width="500" height="720"><br>
<br>
<HR WIDTH=100%>
<A NAME="41">
<b>　<BR>
設問1</b></a><b>　</b>プログラム中の［　　　　］に入れる正しい答えを，解答群の中から選べ。<br>      
<br>
aに関する解答群<BR>
<BR>
ア　a_yet = false and b_yet = false<BR>
イ　a_yet = false or b_yet = false<BR>
ウ　a_yet = true and b_yet = true<BR>
エ　a_yet = true or b_yet = true<BR>
<BR>
bに関する解答群<BR>
<BR>
ア　b_idx ← span_idx<BR>
イ　b_idx ← span_idx + span_size<BR>
ウ　b_idx ← span_idx + span_size÷2<BR>
エ　b_idx ← span_idx + span_size×2<BR>
オ　write_idx ← 1<BR>
カ　write_idx ← a_idx + 1<BR>
キ　write_idx ← b_idx + 1<BR>
ク　write_idx ← write_idx + 1<BR>
<HR WIDTH=100%>  
<A HREF="16S_P_A2.HTM#41">設問1の正解例と解説へ</A>  
<HR WIDTH=100%>
<A NAME="42">
<b>　<BR>
設問2</b></a><b>　</b>次の記述中の［　　　　］に入れる正しい答えを，解答群の中から選べ。<br>      
<br>
次のデータを入力データとして，副プログラムmergeSortを実行すると，［　　c　　］回の併合の処理を実行するが，実際は［　　d　　］回目の併合が終了した時点でデータは昇順に並んでしまう。<br>
副プログラムmergeSortをデータが昇順に並んだ時点で終了させるためには，次の変更1～3を加えればよい。ただし，変更後のプログラム中の変数orderedは，論理型で宣言されているものとする。<br>
<br>
<img border="0" src="image/P_4_02-1.gif" width="300" height="450"><br>
<br>
c，dに関する解答群<br>
<br>
ア　1　　　　イ　2　　　　ウ　3　　　　エ　4　　　　オ　5<br>
<br>
eに関する解答群<br>
<br>
ア　output[write_idx－1]≦output[write_idx]<br>
イ　output[write_idx]≦output[write_idx + 1]<br>
ウ　output[write_idx－1]>output[write_idx]<br>
エ　output[write_idx]>output[write_idx + 1]<br>
オ　temp[write_idx]≦output[write_idx]<br>
カ　temp[write_idx－1]≦temp[write_idx + 1]<br>
キ　temp[write_idx]>output[write_idx]<br>
ク　temp[write_idx－1] >temp[write_idx + 1]<br>
<br>
<HR WIDTH=100%>  
<A HREF="16S_P_A2.HTM#42">設問2の正解例と解説へ</A>  
<HR WIDTH=100%>
<p><A HREF="index.htm">メニューへ戻る</A>　</p>
<HR WIDTH=100%>
  　<BR>
<b><a name="50">問5</a>　</b>プログラム設計に関する次の記述を読んで，設問1～4に答えよ。<br>
<br>
利用者の好みに合わせて国内ニュースを提供するシステムを設計する。このシステムの概要は，次のとおりである。<br>
<br>
〔システムの概要〕<br>
        <table border="0" cellpadding="3" cellspacing="0">
          <tr>
            <td valign="top">（1）</td>
            <td>提供するニュースは，ニュースファイルに次の様式で格納されている。ニュースファイルは，1件のニュースを1レコードとする順ファイルであり，ニュースが登録された順に記録されている。</td>
          </tr>
        </table>
<br>
<img border="0" src="image/P_5_1.gif" width="500" height="70"><br>
<br>
        <table border="0" cellpadding="3" cellspacing="0">
          <tr>
            <td valign="top">　</td>
            <td>登録年月日は，ニュースが登録された年月日を表す8けたの文字列である。例えば，2004年4月1日の場合，“20040401”となる。登録時刻は，ニュースが登録された時分を表す4けたの文字列である。例えば，午後6時30分の場合，“1830”となる。発生年月日はニュースが発生した年月日であり，登録年月日と同様の様式である。発生時刻は，ニュースが発生した時刻であり，登録時刻と同様の様式である。分類は，ニュースの分類であり，“医療”，“教育”，“経済”，“芸能”，“サイエンス”，“社会”，“スポーツ”，“政治”のいずれかが格納される。更にニュースの見出し，概要，詳細及び関連する画像ファイルのアドレスが含まれる。</td>
          </tr>
          <tr>
            <td valign="top">（2）</td>
            <td>利用者の情報は，利用者ファイルに次の様式で登録されている。利用者ファイルは，利用者IDをキーとする索引ファイルである。</td>
          </tr>
        </table>
<br>
<img border="0" src="image/P_5_2.gif" width="500" height="80"><br>
<br>
        <table border="0" cellpadding="3" cellspacing="0">
          <tr>
            <td valign="top">　</td>
            <td>利用者ファイルには，利用者の好みのニュースの分類が一つ以上五つまで分類1から順に登録されている。分類が五つに満たない場合，残りの分類には“NIL”（空を示す）が格納される。システムが提供するニュースは，登録されている分類ごとに，発生年月日，発生時刻の新しいものから最大10件ずつである。<br>
前回利用年月日と前回利用時刻は，利用者が最後にシステムを利用した日時である。前回利用年月日，前回利用時刻は，ニュースファイルの登録年月日，登録時刻とそれぞれ同じ様式の文字列である。</td>
          </tr>
          <tr>
            <td valign="top">（3）</td>
            <td>利用者がシステムを利用する日時が，最後に利用した日時から24時間を超える場合，現在時刻の24時間前から登録されたすべてのニュースを対象に抽出を行う。利用者がシステムを利用する日時が，最後に利用した日時から24時間以内の場合，最後に利用した日時以降に登録されたニュースを対象に抽出を行う。</td>
          </tr>
          <tr>
            <td valign="top">（4）</td>
            <td>システムは，利用者の端末種別に基づき，提供する抽出結果の様式を変更する。利用者の端末が携帯電話などの場合，端末種別は“簡易”であり，ニュースの概要を提供する。パソコンなどの場合，端末種別は“詳細”であり，ニュースの詳細や画像を提供する。</td>
          </tr>
        </table>
<br>
<img border="0" src="image/P_5_3.gif" width="190" height="580"><br>
<br>
〔処理の説明〕<br>
        <table border="0" cellpadding="3" cellspacing="0">
          <tr>
            <td valign="top">（1）</td>
            <td>要求受付処理では，次の様式の利用者の要求情報に含まれる利用者IDを基に，利用者ファイルから利用者IDの一致するレコードを選択する。<br>
なお，様式中の端末種別には，“簡易”か“詳細”かの区分が格納される。
</td>
          </tr>
        </table>
<br>
<img border="0" src="image/P_5_4.gif" width="140" height="65"><br>
<br>
        <table border="0" cellpadding="3" cellspacing="0">
          <tr>
            <td valign="top">　</td>
            <td>さらに，要求情報と選択したレコードから，次の様式のレコードを一時ファイルAに書き出す。
</td>
          </tr>
        </table>
<br>
<img border="0" src="image/P_5_5.gif" width="480" height="75"><br>
<br>
        <table border="0" cellpadding="3" cellspacing="0">
          <tr>
            <td valign="top">　</td>
            <td>最後に，利用者ファイルの該当利用者レコードの前回利用年月日，前回利用時刻の値を，それぞれ現在の年月日，時刻に更新する。</td>
          </tr>
          <tr>
            <td valign="top">（2）</td>
            <td>ニュース抽出処理では，一時ファイルAを基に，ニュースファイルから次の二つの条件を同時に満たすレコードを抽出する。<br>
①ニュースファイルのレコードの登録年月日，登録時刻が，一時ファイルAの抽出開始年月日，抽出開始時刻以降である。<br>
②ニュースファイルのレコードの分類が，一時ファイルAの分類1～5のどれかと一致する。<br>
これらの条件を満たすレコードに，必要な情報を加えて一時ファイルBに書き出す。</td>
          </tr>
          <tr>
            <td valign="top">（3）</td>
            <td>ニュース整列処理では，一時ファイルBを整列して，一時ファイルCへ書き出す。</td>
          </tr>
          <tr>
            <td valign="top">（4）</td>
            <td>結果出力処理では，一時ファイルCから分類ごとに最大10件を抽出し，その結果を，端末種別に従って次の様式で書き出す。</td>
          </tr>
        </table>
<br>
<img border="0" src="image/P_5_6.gif" width="460" height="75"><br>
<br>
<img border="0" src="image/P_5_7.gif" width="530" height="75"><br>
<br>
          <tr>
            <td valign="top">（5）</td>
            <td>ここで，各処理間の情報受渡しは，図に示すファイルだけで行われるものとする。</td>
          </tr>
        </table>
<br><br>
<hr>
<p><b><a name="51">設問1</a>　</b>次の記述中の［　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
<br>
ある利用者の利用者ファイルのレコードが次のとおりであった。<br>
<br>
<img border="0" src="image/P_5_01-1.gif" width="580" height="65"><br>
<br>
この利用者が2004年4月3日の17時00分にシステムを利用した場合，要求受付処理において，一時ファイルAの抽出開始年月日には［　　a　　］が，抽出開始時刻には［　　b　　］が格納される。<br>
<br>
解答群<br>
<br>
ア　“0000”　　　　　　イ　“1700”　　　　　　ウ　“2038”<br>
エ　“20040401”　　　オ　“20040402”　　　カ　“20040403”<br>
<br>
	<HR WIDTH=100%>
</a><a HREF="16S_P_A2.HTM#51">設問1の正解例と解説へ</a>
<HR WIDTH=100%>
  　<BR>
<b><a name="52">設問2</a>　</b>ニュース抽出処理で出力される一時ファイルBのレコード様式は，次のとおりである。この様式中の［　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
<br>
<BR>
<img border="0" src="image/P_5_02-1.gif" width="520" height="65"><br>
<BR>
解答群<BR>
<BR>
ア　端末種別　　　　イ　抽出開始時刻　　　　ウ　抽出開始年月日<BR>
エ　登録時刻　　　　オ　登録年月日　　　　　カ　分類<BR>
キ　利用者ID<BR>
<BR>
<HR WIDTH=100%>
</a><a HREF="16S_P_A2.HTM#52">設問2の正解例と解説へ</a>
<HR WIDTH=100%>
<BR>
<b><a name="53">設問3</a>　</b>次の記述中の［　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
<br>
ニュース整列処理では，ニュース抽出処理で出力されたレコードを対象に整列処理を行う。このとき，第1整列キーは［　　e　　］で文字コードの昇順とし，第2整列キーは［　　f　　］で降順，第3整列キーは［　　g　　］で降順とする。<br>
<br>
解答群<br>
<br>
ア　概要　　　　　　　　イ　画像ファイルのアドレス　　　ウ　詳細<br>
エ　抽出開始時刻　　オ　登録時刻　　　　　　　　　　　カ　登録年月日<br>
キ　発生時刻　　　　　ク　発生年月日　　　　　　　　　ケ　分類<BR>
<BR>
<HR WIDTH=100%>
</a><a HREF="16S_P_A2.HTM#53">設問3の正解例と解説へ</a>
<HR WIDTH=100%>
  　<BR>
<b><a name="54">設問4</a>　</b>次の記述中の［　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
<br>
ある利用者の利用者ファイルのレコードが次のとおりであった。<BR>
<BR>
<img border="0" src="image/P_5_04-1.gif" width="480" height="65"><br>
<BR>
2004年4月1日の11時00分における，分類ごとのニュースの登録件数が次の表のとおりであったとする。この利用者が同年月日の同時刻にシステムを利用した場合，ニュース整列処理で一時ファイルCに書き出されるレコードの件数は［　　h　　］件であり，結果出力処理で表示されるニュースの件数は［　　i　　］件である。<BR>
<BR>
<img border="0" src="image/P_5_04-2.gif" width="470" height="320"><br>
<BR>
解答群<BR>
<BR>
ア　27　　　　イ　28　　　　ウ　50　　　　エ　53<BR>
オ　60　　　　カ　98　　　　キ　108<BR>
<BR>
<BR>
<HR WIDTH=100%>
</a><a HREF="16S_P_A2.HTM#54">設問4の正解例と解説へ</a>
<p align="center"> 
<a href="16S_P_E3.HTM">■問6へ進む</a>　　　　　　<font size="3"><a HREF="INDEX.HTM">■メニューへ戻る</a></font></p>
<HR WIDTH=100%>
  <br>
</blockquote>
</BODY>
</HTML>
