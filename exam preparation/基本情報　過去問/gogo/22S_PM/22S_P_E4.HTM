<html>
<head>
<title>平成22年度 春期 基本情報技術者 午後 問題（問10～問13）</title>
<style type="text/css"><!--
body{line-height:150%;}
code{font-size:12pt;}
h3{text-align:center;}
div.caution{border:solid 1px #000000; padding:0.5em;}
--></style>
</head>
<body>
<blockquote>
<hr>
<h3>平成22年度　春期　基本情報技術者<br/>
午後　問題（問10～問13）</h3>
<hr>
<p><strong><a name="100">問10</a></strong>　次のCOBOLプログラムの説明及びプログラムを読んで，設問1～3に答えよ。</p>
<p>〔プログラム1の説明〕<br/>
　G社では，セキュリティ対策のため，入退室時のIDカード操作によって資格保有者以外の立入りを禁止し，かつ，入室者の入退室日時を記録しておくセキュリティルームを設置した。プログラム1は，セキュリティルームを管理するシステムのサブプログラムであり，処理コードと従業員番号を受け取って，結果コードを返す。<br/>
（1）パラメタの形式は，図1のとおりである。</p>

<p><img src="img/pme66.png"><br/>
図1　パラメタの形式</p>

<p>　①　処理コードには，入室時には1が，退室時には2が設定される。<br/>
　②　結果コードには，入室時に入室を許可する場合は0を，許可しない場合は，事象に対応するコードを設定する。退室時には0を設定する。<br/>
（2）従業員ファイルは，従業員番号をキーとする，図2に示すレコード様式の索引ファイルである。</p>

<p><img src="img/pme67.png"><br/>
図2　従業員ファイルのレコード様式</p>

<p>　①　従業員番号には，従業員に対して一意に割り振られた8けたの数字が設定される。ただし，従業員番号0の従業員はいない。<br/>
　②　職級には，当該従業員の職級が設定される。一般社員，係長，課長，部長に対応する値として，それぞれ1，2，3，4が設定される。<br/>
　③　一般社員及び係長の資格には，入室許可申請によって入室を許可された場合には1が，許可されていない場合には0が設定される。課長及び部長の資格に格納される値は不定である。<br/>
（3）セキュリティルームに入室できるのは，課長，部長，入室を許可された一般社員及び入室を許可された係長である。<br/>
（4）セキュリティルーム内に同時に在室できる人員は99名までとする。<br/>
（5）入室者の入退室日時を記録する入退室ログファイルは，図3に示すレコード様式の順ファイルである。</p>

<p><img src="img/pme68.png"><br/>
図3　入退室ログファイルのレコード様式</p>

<p>　①　入退室コードには，入室記録の場合は1が，退室記録の場合は2が設定される。<br/>
　②　入退室日時には，西暦の日付と24時間表記の時刻を格納する。この情報は，組込み関数<code>CURRENT-DATE</code>の関数値の先頭14文字を使用する。<br/>
　③　レコードは，入退室処理時に出力する。したがって，このファイル中の全レコードは，入退室日時の昇順に整列されている。<br/>
　④　セキュリティルームを管理するシステムは，メンテナンスのため月末の深夜に一時運用を停止して，入退室ログファイルを新しいファイルに切り換える。<br/>
　なお，メンテナンス開始時はセキュリティルーム内を無人にし，完了するまで入室を禁止する。したがって，同一人物による入室と退室のレコードは必ず対で格納される。<br/>
（6）このプログラムは，最初に呼び出されたときを除き，CANCEL文などによって初期状態になることはない。<br/>
（7）セキュリティルームには，本人のIDカードを使って1人ずつ入退室する。セキュリティルームの入退室はすべて記録される。</p>

<p><img src="img/pme69.png"></p>

<hr>
<p><strong><a name="101">設問1</a></strong>　プログラム中の［　　 　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>aに関する解答群<br/>
ア　<code>EMP-CLASS <= 2</code><br/>
イ　<code>EMP-CLASS <= 2 AND EMP-QUAL = 0</code><br/>
ウ　<code>EMP-CLASS <= 2 OR EMP-QUAL = 0</code><br/>
エ　<code>EMP-QUAL = 0</code></p>
<p>bに関する解答群<br/>
ア　<code>ADD 1 TO CNT</code><br/>
イ　<code>MOVE ZERO TO CNT</code><br/>
ウ　<code>SET CD-ENTER TO TRUE</code><br/>
エ　<code>SET CD-EXIT TO TRUE</code></p>
<hr>
<a href="22S_P_A4.HTM#101">設問1の正解例と解説へ</a>
<hr>
<p><strong><a name="102">設問2</a></strong>　パラメタで渡された従業員番号が，従業員ファイル中に存在しなかった場合に設定する結果コードを，解答群の中から選べ。</p>
<p>解答群<br/>
ア　<code>1</code>　　　イ　<code>2</code>　　　ウ　<code>3</code>　　　エ　<code>4</code></p>
<hr>
<a href="22S_P_A4.HTM#102">設問2の正解例と解説へ</a>
<hr>
<p><strong><a name="103">設問3</a></strong>　プログラム1によって作成され，保管していた，ある月の入退室ログファイルを読み込み，指定した日時にセキュリティルーム内にいたすべての従業員の従業員番号を表示するプログラム2を作成した。指定した日時より前に入室し，かつ，指定した日時か，それより後に退室したすべての従業員の従業員番号を表示する。プログラム中の［　　 　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p><img src="img/pme70.png"></p>

<p>cに関する解答群<br/>
ア　<code>LOG-TIME < PRM-TIME</code><br/>
イ　<code>LOG-TIME <= PRM-TIME</code><br/>
ウ　<code>LOG-TIME = PRM-TIME</code><br/>
エ　<code>LOG-TIME > PRM-TIME</code><br/>
オ　<code>LOG-TIME >= PRM-TIME</code></p>
<p>d～fに関する解答群<br/>
ア　<code>CNT < 99</code><br/>
イ　<code>CNT > 99</code><br/>
ウ　<code>EMP-NO(CNT) = ZERO</code><br/>
エ　<code>LOG-EMP = EMP-NO(CNT)</code><br/>
オ　<code>LOG-EMP = ZERO</code><br/>
カ　<code>LOG-EMP NOT = EMP-NO(CNT)</code><br/>
キ　<code>LOG-EMP NOT = ZERO</code><br/>
ク　<code>SRCH-END</code></p>
<hr>
<a href="22S_P_A4.HTM#103">設問3の正解例と解説へ</a>
<hr>
<a href="INDEX.HTM">■メニューへ戻る</a>
<hr>
<p><strong><a name="110">問11</a></strong>　次のJavaプログラムの説明及びプログラムを読んで，設問1，2に答えよ。</p>

<p>〔プログラムの説明〕<br/>
　リバーシゲームで2人のプレーヤの対戦を支援するプログラムである。<br/>
　リバーシは，8行8列の升からなる盤に，2人のプレーヤが，一方の面が白，他方の面が黒の石を置いていき，盤上の石の個数を競うゲームである。各プレーヤは自分の石の色(白又は黒)をもつ。盤には，初期状態として，図1のとおり中央に白黒2個ずつの石を配置する。升の位置は，列をアルファベット，行を数字で表し，列・行の順に指定する。例えば，図1で最も左上の升はa1，最も右下の升はh8である。</p>

<p><img src="img/pme71.png"><br/>
図1　盤の初期状態</p>

<p><img src="img/pme72.png"><br/>
図2　盤の石を置く例</p>

<p>　プレーヤは，空いている升に石を置いて，縦，横，斜めのどれかの方向に隣接する相手の石を自分の色の石で挟まなければならない。このとき，挟んだ相手の石をすべて反転させ自分の色の石とする。図2に，黒をもつプレーヤが盤に石を置く例を示す。（ア）は図1の中央部分を抜き出したものである。（イ）は，黒を升f5に置いて，升e5の白を挟んだ状態である。（ウ）は，挟んだ白を反転させて黒にした状態である。相手の石を挟むことができないときは，そのプレーヤは石を置くことができないので，手番をパスする。片方の色の石が盤上からなくなったとき，すべての升が石で埋まったとき，又は空いているどの升にも石が置けなくなったとき，ゲームは終了し，自分の色の石の個数の多い方のプレーヤが勝ちとなる。<br/>
　列挙<code>Piece</code>は石の面を表す。フィールド<code>BLACK</code>は黒，<code>WHITE</code>は白を表す。<br/>
　クラス<code>Player</code>は，プレーヤを表す。フィールド<code>piece</code>は，そのプレーヤの石の色を表し，フィールド<code>count</code>は，盤上での石の個数を表す。<br/>
　クラス<code>Board</code>は盤を表し，対戦を支援する次の(1)～(7)の機能を実現する。<br/>
（1）配列<code>grid</code>は，盤の升を表す。配列要素<code>grid[row][col]</code>において，<code>row</code>は行，<code>col</code>は列である。例えば，升d2は，<code>grid[1][3]</code>で表される。<br/>
（2）列挙<code>Direction</code>は，配列<code>grid</code>において，縦，横，斜め8方向の隣接する升への<code>row</code>及び<code>col</code>のオフセットを表す定数である。<br/>
（3）コンストラクタは，インスタンスを生成し，盤を初期状態にする。<br/>
（4）メソッド<code>canPlace</code>は，引数<code>player</code>で与えられたプレーヤが石を置ける升があるかどうかを調べ，あるときは<code>true</code>，ないときは<code>false</code>を返す。<br/>
（5）メソッド<code>reverse</code>は，引数<code>row</code>，<code>col</code>で与えられた升に引数<code>piece</code>で与えられた色の石を置いた場合，その升から引数<code>dir</code>で与えられた方向に隣接する升の石が反転可能であれば反転する。このメソッドは，反転可能かどうかを判断するために隣接する升に対して自身を再帰的に呼び出す。すなわち，再帰呼出しによって連続する相手の石の先に<code>piece</code>と同色の石があるかどうかを判定し，あった場合は相手の石を反転して復帰する。すべての再帰呼出しから復帰したとき，挟んだ相手の石はすべて反転し，その反転した石の個数を返す。反転できなかったときは，0又は負の値を返す。<br/>
（6）メソッド<code>place</code>は，引数<code>position</code>で指定された升に引数<code>player</code>で与えられたプレーヤの石が置けるかどうかを判定する。石が置ける場合は，升に石を置き，挟んだ相手の石を反転し，反転した石の個数を返す。この処理は，メソッド<code>reverse</code>を呼び出して行う。指定された升に既に石がある場合，又は相手の石を1個も反転できない場合は，<code>0</code>又は負の値を返し，指定された升に石は置かない。<br/>
（7）メソッド<code>display</code>は，盤の状態を表示する。</p>
<p>　クラス<code>Reversi</code>はゲームを実行する。変数<code>player</code>は，石を置く番のプレーヤである。変数<code>opponent</code>は，<code>player</code>の対戦相手である。黒をもつプレーヤが常に先手である。<code>player</code>が石を置いた後に，それぞれのプレーヤの色の石の個数を更新し，ゲームの終了を判断する。ゲームが終了した場合は，盤の最後の状態を表示してプログラムを終了する。終了しなかったときは，<code>player</code>と<code>opponent</code>が交代し，ゲームを続行する。メソッド<code>prompt</code>は，引数<code>player</code>の石の色を表示し，石を置く升を“列行”の形式で入力するように促し，入力された升の位置を文字列で返す。</p>

<p><img src="img/pme73.png"></p>

<p><img src="img/pme74.png"></p>

<p><img src="img/pme75.png"></p>

<p><img src="img/pme76.png"></p>

<hr>
<p><strong><a name="111">設問1</a></strong>　プログラム中の［　　 　　］に入れる正しい答えを，解答群の中から選べ。</p>

<p>aに関する解答群<br/>
ア　<code>-1</code>，<code>0</code><br/>
イ　<code>-1</code>，<code>-1</code><br/>
ウ　<code>0</code>，<code>0</code><br/>
エ　<code>0</code>，<code>1</code><br/>
オ　<code>1</code>，<code>0</code></p>
<p>bに関する解答群<br/>
ア　<code>grid[count][0]</code><br/>
イ　<code>grid[nrow][col]</code><br/>
ウ　<code>grid[nrow][ncol]</code><br/>
エ　<code>grid[row][col]</code><br/>
オ　<code>grid[row][ncol]</code></p>
<p>cに関する解答群<br/>
ア　<code>*=</code><br/>
イ　<code>+=</code><br/>
ウ　<code>-=</code><br/>
エ　<code>/=</code><br/>
オ　<code>=</code></p>
<p>dに関する解答群<br/>
ア　<code>++n</code><br/>
イ　<code>n</code><br/>
ウ　<code>n + 1</code><br/>
エ　<code>n - 1</code><br/>
オ　<code>n++</code></p>
<p>eに関する解答群<br/>
ア　<code>board</code><br/>
イ　<code>opponent</code><br/>
ウ　<code>Piece.BLACK</code><br/>
エ　<code>Piece.WHITE</code><br/>
オ　<code>player</code></p>
<hr>
<a href="22S_P_A4.HTM#111">設問1の正解例と解説へ</a>
<hr>
<p><strong><a name="112">設問2</a></strong>　次の表は，プログラム3のメソッド<code>reverse</code>の仕様をまとめたものである。表中の［　　 　　］に入れる正しい答えを，解答群の中から選べ。ここで，bには正しい答えが入っているものとする。</p>

<p><img src="img/pme77.png"></p>

<p>解答群<br/>
ア　隣接する升が存在しない，又は隣接する升に石がない場合<br/>
イ　隣接する升に<code>Piece</code>以外のクラスのインスタンスが存在する場合<br/>
ウ　隣接する升の石が引数<code>piece</code>で与えられた石と同色の場合<br/>
エ　隣接する升の石が引数<code>piece</code>で与えられた石と異なる色の場合</p>
<hr>
<a href="22S_P_A4.HTM#112">設問2の正解例と解説へ</a>
<hr>
<a href="INDEX.HTM">■メニューへ戻る</a>
<hr>
<p><strong><a name="120">問12</a></strong>　次のアセンブラプログラムの説明及びプログラムを読んで，設問1，2に答えよ。</p>
<p>〔プログラムの説明〕<br/>
　浮動小数点数の加算を行う副プログラム<code>FADD</code>である。<br/>
（1）浮動小数点数は，メモリ中の連続する2語に次の形式で格納する。</p>

<p><img src="img/pme78.png"></p>

<p>　この形式で表される浮動小数点数は(－1)<sup>s</sup>×0.M×2<sup>E－127</sup>である。<br/>
　S＝E＝M＝0でゼロを表現する（M＝0のときは，必ずS＝E＝0であること)。<br/>
（2）<code>FADD</code>は，被加数と加数について，いずれか指数の大きい方にもう一方の指数をそろえてから仮数を加算し，結果がゼロの場合を除き正規化（仮数部の最上位ビットが1となるように指数部を調整）する。指数部調整の過程で，アンダフロー（指数部が0未満になるので正規化が不可能），オーバフロー（指数部が255を超えるので正規化が不可能)は発生しないものとする。<br/>

&nbsp;&nbsp;&nbsp;&nbsp;正規化の例<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;〔E＝10000100　　　M＝0010000000000000〕<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;↓正規化（Mを2ビット左に論理シフトし，Eから2を減じる）<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;〔E＝10000010　　　M＝1000000000000000〕<br/>
（3）<code>FADD</code>は，被加数<code>X</code>，加数<code>Y</code>及び結果<code>Z</code>の格納領域の先頭番地を，それぞれ<code>GR1</code>，<code>GR2</code>，<code>GR3</code>に設定して呼び出される。<br/>
（4）<code>FADD</code>から戻るとき，汎用レジスタ<code>GR1</code>～<code>GR7</code>の内容は元に戻す。</p>

<p><img src="img/pme79.png"></p>

<hr>
<p><strong><a name="121">設問1</a></strong>　プログラム中の［　　 　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>aに関する解答群<br/>
ア　<code>ADDL  GR4,GR5</code><br/>
イ　<code>ADDL  GR5,GR4</code><br/>
ウ　<code>LD    GR4,GR5</code><br/>
エ　<code>LD    GR5,GR4</code><br/>
オ　<code>SRL   GR4,0,GR5</code><br/>
カ　<code>SRL   GR5,0,GR4</code></p>
<p>bに関する解答群<br/>
ア　<code>JMI   ADDMXY</code><br/>
イ　<code>JMI   XMINUS</code><br/>
ウ　<code>JMI   YMINUS</code><br/>
エ　<code>JPL   ADDMXY</code><br/>
オ　<code>JPL   XMINUS</code><br/>
カ　<code>JPL   YWINUS</code></p>
<p>cに関する解答群<br/>
ア　<code>JOV    ADDMXY</code><br/>
イ　<code>JOV    SCHECK</code><br/>
ウ　<code>JPL    ADDMXY</code><br/>
エ　<code>JPL    SCHECK</code><br/>
オ　<code>JUMP  ADDMXY</code><br/>
カ　<code>JUMP  SCHECK</code></p>
<p>dに関する解答群<br/>
ア　<code>SLL   GR5,0,GR4</code><br/>
イ　<code>SLL   GR5,1</code><br/>
ウ　<code>SRA   GR5,0,GR4</code><br/>
エ　<code>SRA   GR5,1</code><br/>
オ　<code>SRL   GR5,0,GR4</code><br/>
カ　<code>SRL   GR5,1</code></p>
<p>eに関する解答群<br/>
ア　<code>ADDL  R4,=1</code><br/>
イ　<code>ADDL  GR5,=1</code><br/>
ウ　<code>SLL   GR4,1</code><br/>
エ　<code>SLL   GR5,1</code><br/>
オ　<code>SUBL  GR4,=1</code><br/>
カ　<code>SUBL  GR5,=1</code></p>
<hr>
<a href="22S_P_A4.HTM#121">設問1の正解例と解説へ</a>
<hr>
<p><strong><a name="122">設問2</a></strong>　プログラムを減算用に変更する場合，行番号27及び32の直後に追加する命令として正しい答えを，解答群の中から選べ。<br/>
　なお，プログラム中のコメントは適宜読み替えるものとする。</p>
<p>解答群<br/>
ア　<code>AND   GR2,=#7FFF</code><br/>
イ　<code>AND   GR2,=#8000</code><br/>
ウ　<code>OR    GR2,=#7FFF</code><br/>
エ　<code>OR    GR2,=#8000</code><br/>
オ　<code>XOR   GR2,=#7FFF</code><br/>
カ　<code>XOR   GR2,=#8000</code></p>
<hr>
<a href="22S_P_A4.HTM#122">設問2の正解例と解説へ</a>
<hr>
<a href="INDEX.HTM">■メニューへ戻る</a>
<hr>
<p><strong><a name="130">問13</a></strong>　次の表計算及びワークシートの説明を読んで，設問1，2に答えよ。</p>
<p>〔表計算の説明〕<br/>
　ある喫茶店では，これまで手書き伝票と電卓を使って料金計算を行ってきたが，飲料の品目サイズ別メニュー化及び料理オプションの追加に伴い，表計算ソフトを利用することにした。</p>
<p>〔ワークシート:メニュー〕<br/>
（1）この喫茶店の飲料，料理を記載した表計算ソフトのワークシート“メニュー”を作成した。そのワークシートを図1に示す。</p>

<p><img src="img/pme80.png"><br/>
図1　ワークシート“メニュー”</p>

<p>（2）ワークシート“メニュー”中の各項目の説明は，次のとおりである。<br/>
　飲料品目　：“ブレンド”などの4品目である。<br/>
　サイズ　　：“S”，“M”，“L”の3種類で，品目ごとサイズごとの価格である。<br/>
　セット割引：料理と飲料を同時に注文した場合に適用される飲料の割引額である。<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ワークシートには，負の値を設定する。<br/>
　料理品目　：“サンドイッチ”などの4品目である。<br/>
　オプション：“単品”，“ランチ”，“大盛”の3種類である。“単品”は，料理だけを注文した場合の価格である。“ランチ”は，単品にスープ又はサラダが付く注文をした場合の価格である。“大盛”は，大盛を注文した場合の価格であり，“カレー”と“ナポリタン”のランチに限る。</p>
<p>〔ワークシート：伝票〕<br/>
（1）注文された飲料及び料理の数量の入力によって，料金計算を行うためのワークシート“伝票”を作成した。そのワークシートの例を，図2に示す。</p>

<p><img src="img/pme81.png"><br/>
図2　ワークシート“伝票”の例</p>

<p>（2）ワークシート“伝票”には次の文字列及び計算式を入力する。<br/>
　①　行2～27の種類，品目，タイプには，あらかじめ，次のすべての取り得る組合せを入力する。<br/>
　　種類　：“飲料”又は“料理”を入力する。<br/>
　　品目　：飲料又は料理の品目を入力する。<br/>
　　タイプ：飲料の場合は，サイズの種類又は“セット割引”を入力する。<br/>
　　料理の場合は，オプションの種類を入力する。<br/>
　②　行2～27の単価には，ワークシート“メニュー”を参照して，該当する価格を求める計算式を入力する。<br/>
　③　行2～27の料金には，品目，タイプごとの料金を求める計算式を，行28には，セット割引を加味した合計料金を求める計算式を入力する。<br/>
（3）ワークシート“伝票”を作成する。<br/>
　①　ワークシート“伝票”は，顧客のグループ単位に注文をまとめて作成する。<br/>
　②　グループ内の個々の顧客の注文に基づき，品目，タイプごとの注文数量を数量に入力する。<br/>
　③　品目，タイプごとの料金が計算され，更に合計料金が計算される。</p>

<p>表1　ワークシート“伝票”で用いる関数<br/>
<img src="img/pme82.png"></p>

<hr>
<p><strong><a name="131">設問1</a></strong>　ワークシート“伝票”に関する次の記述中の［　　 　　］に入れる正しい答えを，解答群の中から選べ。</p>

<p>　セルD2に単価を求めるための次の計算式を入力して，セルD3～D27に複写する。ここで，複数のワークシート間でデータを参照するには，
“ワークシート名!セル”又は“ワークシート名!セルの範囲”という形式で指定する。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IF(A2＝'飲料',［　　a　　］,［　　b　　］)</p>

<p>解答群<br/>
ア　照合一致(配列(メニュー!$B$4～$E$7,B2,C2),メニュー!$A$4～$A$7)<br/>
イ　照合一致(配列(メニュー!$B$4～$E$7,B2,C2),メニュー!$B$3～$E$3)<br/>
ウ　照合一致(配列(メニュー!$H$4～$J$7,B2,C2),メニュー!$G$4～$G$7)<br/>
エ　照合一致(配列(メニュー!$H$4～$J$7,B2,C2),メニュー!$H$3～$J$3)<br/>
オ　配列(メニュー!$B$4～$E$7,照合一致(B2,メニュー!$A$4～$A$7),<br/>
　　照合一致(C2,メニュー!$B$3～$E$3))<br/>
力　配列(メニュー!$B$4～$E$7,照合一致(B2,メニュー!$B$3～$E$3),<br/>
　　照合一致(C2,メニュー!$A$4～$A$7))<br/>
キ　配列(メニュー!$B$4～$E$7,照合一致(C2,メニュー!$B$3～$E$3),<br/>
　　照合一致(B2,メニュー!$A$4～$A$7))<br/>
ク　配列(メニュー!$H$4～$J$7,照合一致(B2,メニュー!$G$4～$G$7),<br/>
　　照合一致(C2,メニュー!$H$3～$J$3))<br/>
ケ　配列(メニュー!$H$4～$J$7,照合一致(B2,メニュー!$H$3～$J$3),<br/>
　　照合一致(C2,メニュー!$G$4～$G$7))<br/>
コ　配列(メニュー!$H$4～$J$7,照合一致(C2,メニュー!$H$3～$J$3),<br/>
　　照合一致(B2,メニュー!$G$4～$G$7))</p>

<p>〔ワークシート：割引〕<br/>
　顧客満足度向上のための施策として，次の割引策を適用することにした。<br/>
（1）最適割引<br/>
　顧客のグループ内で，料理と飲料のセットの組合せを変えることで，注文時のセット割引額よりも割引額が大きくなる場合がある。注文時の伝票の入力内容を調べ，注文された料理又は飲料の注文数量の少ない方をセット数の上限として，割引額の高い飲料からセットに割り当てていくことによって，セット割引額の合計が最大となるように割引を行う。<br/>
（2）数量割引<br/>
　数量割引は，飲料を15個以上かつ料理を10個以上，又は料理と飲料を合わせて30個以上を注文した場合に適用され，最適割引時の合計料金から5％の割引を行う。<br/>
　最適割引及び数量割引の計算を行うためのワークシート“割引”を作成した。そのワークシートの例を，図3に示す。<br/>
　なお，数量割引後の合計料金は，小数点以下を切り捨てて表示する。</p>

<p><img src="img/pme83.png"><br/>
図3　ワークシート“割引”の例</p>

<p>表2　ワークシート“割引”で用いる関数<br/>
<img src="img/pme84.png"></p>

<hr>
<a href="22S_P_A4.HTM#131">設問1の正解例と解説へ</a>
<hr>
<p><strong><a name="132">設問2</a></strong>　ワークシート“割引”に関する次の記述中の［　　 　　］に入れる正しい答えを，解答群の中から選べ。</p>
<p>（1）行1～4では，セット割引，飲料，料理の注文数量から，最適セット数を求める。<br/>
　①　ワークシート“伝票”におけるセット割引，飲料の注文数の合計を求める次の計算式をセルB1，B2に入力する。<br/>
　　　セルB1　　［　　　　c　　　　］<br/>
　　　セルB2　　［　　　　d　　　　］<br/>
　セルB3に料理の注文数の合計を求める計算式を入力する。<br/>
　②　行4の最適セット数は，最適割引を行うためのセットの注文数の合計であり，飲料又は料理の注文数の合計値の少ない方になる。最適セット数を求める計算式を，セルB4に入力する。<br/>

（2）行7～13では，“伝票”を参照しながら，注文時の注文数，セット数及び割引額を，セット割引単価の大きい順に並べ替えた品目ごとに集計する。さらに，最適割引を行った場合のセット数の割当数及び割引額の計算を行う。<br/>
　①　セルA9～A12にセット割引単価の大きい順に並べ替えた飲料の品目を入力する。<br/>
　②　セルB9～B12に品目ごとのセット割引額を入力する。<br/>
　③　セルC9に注文時の品目ごとの注文数を求める次の計算式を入カし，セルC10～C12に複写する。<br/>
　　　［　　　　e　　　　］<br/>
　④　セルD9に注文時の品目ごとのセット数を求める計算式を入力し，セルD10～D12に複写する。<br/>
　⑤　セルE9～E12には，注文時の品目ごとの割引額の計算式を入力する。<br/>
　⑥　セルF9に最適割引を行うための最適セット数であるセルB4の値を複写する。次に，セット割引をセット割引単価の大きい品目の順に割り当てたセット数を求めるためにセルG9に次の計算式を入力し，セルG10～G12に複写する。<br/>
　　　［　　　　f　　　　］<br/>
　⑦　セルF10～F13に，セット数を品目ごとに順次割り当てたときの割当数の残数を求める計算式を入力する。<br/>
　⑧　セルH9～H12に，最適割引時の品目ごとの割引額の計算式を入力する。<br/>
　⑨　セルC13，D13，E13に，注文時の注文数，セット数，割引額の合計値を求める計算式を入力する。セルF13には，合計値ではなく，⑦で割当数の残数を求める計算式を入力する。セルG13，H13に，最適割引時のセット数，割引額の合計値を求める計算式を入力する。<br/>
（3）セルB14に，最適割引時の合計料金を求める計算式を入力する。<br/>
（4）数量割引後の合計料金を求める次の計算式をセルB15に入力する。<br/>
　　　［　　　　g　　　　］</p>
<p>c，dに関する解答群<br/>
ア　照合合計(A1,伝票!C2～C27,伝票!E2～E27)<br/>
イ　照合合計(A2,伝票!A2～A27,伝票!E2～E27)<br/>
ウ　照合合計(A2,伝票!A2～A27,伝票!E2～E27)－B1<br/>
エ　照合合計(A3,伝票!A2～A27,伝票!E2～E27)<br/>
オ　照合合計(A3,伝票!A2～A27,伝票!E2～E27)－B1<br/>
力　複数条件照合合計((A2,'≠',伝票!A2～A27),(A1,'＝',伝票!C2～C27),<br/>
　　伝票!E2～E27)<br/>
キ　複数条件照合合計((A3,'＝',伝票!A2～A27),(A1,'＝',伝票!C2～C27),<br/>
　　伝票!E2～E27)<br/>
ク　複数条件照合合計((A3,'＝',伝票!A2～A27),(A1,'≠',伝票!C2～C27),<br/>
　　伝票!E2～E27)</p>
<p>eに関する解答群<br/>
ア　照合合計(A9,伝票!$B$2～$B$27,伝票!$E$2～$E$27)<br/>
イ　照合合計(A9,伝票!$B$2～$B$27,伝票!$E$2～$E$27)<br/>
　　－照合合計(B$7,伝票!$C$2～$C$27,伝票!$E$2～$E$27)<br/>
ウ　照合合計(B$7,伝票!$C$2～$C$27,伝票!$E$2～$E$27)<br/>
エ　照合合計(B$7,伝票!$C$2～$C$27,伝票!$E$2～$E$27)<br/>
　　－照合合計(A9,伝票!$B$2～$B$27,伝票!$E$2～$E$27)<br/>
オ　複数条件照合合計((A9,'＝',伝票!$B$2～$B$27),<br/>
　　(B$7,'=',伝票!$C$2～$C$27),伝票!$E$2～$E$27)<br/>
力　複数条件照合合計((A9,'＝',伝票!$B$2～$B$27),<br/>
　　(B$7,'≠',伝票!C$2～C$27),伝票!E$2～E$27)<br/>
キ　複数条件照合合計((A9,'≠',伝票!B$2～B$27),<br/>
　　(B$7,'＝',伝票!C$2～C$27),伝票!E$2～E$27)<br/>
ク　複数条件照合合計((A9,'≠',伝票!B$2～B$27),<br/>
　　(B$7,'≠',伝票!C$2～C$27),伝票!E$2～E$27)</p>
<p>fに関する解答群<br/>
ア　IF(F9≧C9,C9,F9)<br/>
イ　IF(F9≧C9,C9,F9＋C9)<br/>
ウ　IF(F9≧C9,C9,F9－C9)<br/>
エ　IF(F9≦C9,C9,F9)<br/>
オ　IF(F9≦C9,C9,F9＋C9)<br/>
カ　IF(F9≦C9,C9,F9－C9)</p>
<p>gに関する解答群<br/>
ア　B14－IF(論理和(論理積(B2≧15,B3≧10),(B2＋B3)≧30),0.05,0)＊H13<br/>
イ　B14－IF(論理積(論理和(B2≧15,B3≧10),(B2＋B3)≧30),0.05,0)＊H13<br/>
ウ　(1＋IF(論理和(論理積(B2≧15,B3≧10),(B2＋B3)≧30),0.05,0))＊B14<br/>
エ　(1＋IF(論理積(論理和(B2≧15,B3≧10),(B2＋B3)≧30),0.05,0))＊B14<br/>
オ　(1－IF(論理和(論理積(B2≧15,B3≧10),(B2＋B3)≧30),0.05,1))＊B14<br/>
カ　(1－IF(論理積(論理和(B2≧15,B3≧10),(B2＋B3)≧30),0.05,1))＊B14<br/>
キ　(1－IF(論理積(論理和(B2≧15,B3≧10),(B2＋B3)≧30),0.05,0))＊B14<br/>
ク　(1－IF(論理和(論理積(B2≧15,B3≧10),(B2＋B3)≧30),0.05,0))＊B14</p>
<hr>
<a href="22S_P_A4.HTM#132">設問2の正解例と解説へ</a>
<hr>
<a href="INDEX.HTM">■メニューへ戻る</a>
<hr>
</blockquote>
</body>
</html>
