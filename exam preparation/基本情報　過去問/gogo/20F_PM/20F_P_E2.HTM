<html>

<head>
<title>平成20年度秋期試験　問題(問3～問5)</title>
<style type="text/css">
body{line-height:150%;}
code{font-size:12pt;}
</style>
</head>

<body>

<blockquote>
	<hr>
	<h3 align="center">平成20年度秋期試験　問題(問3～問5)</h3>
	<hr>
	<p><a name="30"><strong>問3</strong></a>　関係データベースに関する次の記述を読んで，設問1，2に答えよ。<br>
	<br>
	　B社では，社員に関連する関係データべースを構築し，各部署からの問合せに対応している。B社の関係データべ－スの構造の一部を図に示す。<br>
	<br>
	<img border="0" src="img/P10-1.png" width="575" height="215"><br>
	<br>
	〔各表の概要〕<br>
	（1）社員表は，社員（退職者を含む）の情報を管理する。在職中の社員の退職年月日はNULLとする。<br>
	（2）部署表は，B社の部署名を管理する。<br>
	（3）役職表は，B社の役職名を管理する。<br>
	（4）研修実施表は，年度ごとにB社が実施した研修名と研修期間を管理する。<br>
	（5）受講表は，各社員が受講した研修とその日数（受講日数）を管理する。社員は，本人が必要と思う研修だけに申し込み，受講する。受講予定の社員が受講しなかった場合，その研修の受講日数の値は0となる。<br>
	（6）B社で規定する年度は，その年の4月1日から翌年の3月31日までである。<br>
	2007年度は，2007年4月1日から2008年3月31日までとなる。</p>
	<hr>
	<p><a name="31"><strong>設問1</strong></a>　入社2年目の社員が，入社以来1日でも受講した研修にどのようなものがあるかを知りたい。<br>
	　次のSQL文中の［　　　　　］に入れる正しい答えを，解答群の中から<u>三つ</u>選べ。ここで，入社2年目の社員とは，入社した年度が2007年度で，かつ在職中の社員とする。<br>
	<br>
	<img border="0" src="img/P11-1.png" width="496" height="156"><br>
	<br>
	解答群<br>
	ア　<code><strong>研修実施表.研修コード = 受講表.研修コード</strong></code><br>
	イ　<code><strong>研修実施表.年度 = '2007'</strong></code><br>
	ウ　<code><strong>研修実施表.年度 = 受講表.年度</strong></code><br>
	エ　<code><strong>研修日数 &gt; 0</strong></code><br>
	オ　<code><strong>受講日数 &gt; 0</strong></code><br>
	カ　<code><strong>受講表.年度 = '2007'</strong></code></p>
	<hr>
	<p><a href="20F_P_A2.HTM#31">設問1の正解例と解説へ</a></p>
	<hr>
	<p><a name="32"><strong>設問2</strong></a>　B社では，研修を受講した社員に対して，本人の受講実績だけが照会できるSQL文が提供されている。しかし，役職名の中に“部長”という文字列がある社員（“部長”，“副部長”，“部長代理”など）は，自分の受講実績だけでなく，同じ所属部署にいるすべての社員の受講実績を照会できるようにしたい。この照会ができる社員を選択するSQL文の説明として［　　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
	<br>
	　役職表の役職名に“部長”という文字列を含むすべての役職は［　　a　　］として検索する。同じ所属部署の社員を抽出するには，次のとおりにする。<br>
	　受講表には［　　b　　］という項目があるが，これだけではその社員が同じ所属部署であるかどうか分からない。同じ所属部署であるかどうかを知るためには［　　c　　］という項目が必要になる。したがって，受講表の項目［　　b　　］を用いて［　　d　　］を結合し，［　　c　　］の値を取り出せばよい。<br>
	<br>
	aに関する解答群<br>
	ア　<code><strong>SELECT 役職コード FROM 役職表 WHERE 役職名 = '部長'</strong></code><br>
	イ　<code><strong>SELECT 役職コード FROM 役職表</strong></code><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code><strong>WHERE 役職名 = '部長' 
	OR 役職名 = '副部長' OR 役職名 = '部長代理'</strong></code><br>
	ウ　<code><strong>SELECT 役職コード FROM 役職表</strong></code><br>
	　　　&nbsp; <code><strong>WHERE 役臓名 IN ('部長', '副部長', '部長代理')</strong></code><br>
	エ　<code><strong>SELECT 役職コード FROM 役職表 WHERE 役職名 LIKE '%部長%'</strong></code><br>
	オ　<code><strong>SELECT 役職コード FROM 役職表 WHERE 役職名 LIKE '部長%'</strong></code><br>
	<br>
	b～dに関する解答群<br>
	<br>
	ア　研修コード<br>
	イ　研修実施表<br>
	ウ　社員コード<br>
	エ　社員表<br>
	オ　部署コード<br>
	カ　部署表<br>
	キ　役職コード<br>
	ク　役職表</p>
	<hr>
	<p><a href="20F_P_A2.HTM#32">設問2の正解例と解説へ</a></p>
	<hr>
	<p><a href="INDEX.HTM">メニューへ戻る</a></p>
	<hr>
	<p><a name="40"><strong>問4</strong></a>　次のアルゴリズムの説明を読んで，設問1，2に答えよ。<br>
	<br>
	〔アルゴリズムの説明〕<br>
	　N個（N＞1）の地点から構成されるグラフにおいて，出発地点からそれ以外の地点までの最短距離を求めるアルゴリズムShortestLengthである。<br>
	（1）図1に示す地点数N＝6のグラフを例として，ShortestLengthを説明する。図1において，丸は地点を，矢印の向きは進行方向を，矢印に付けた数字は地点間の距離を表す。<br>
	<br>
	<img border="0" src="img/P13-1.png" width="227" height="149"><br>
	<br>
	（2）ShortestLengthでは，次の配列を用いる。要素番号は1，2，…，Nで，地点と対応している。配列の添字は1から始まる。<br>
	Dt[i][j]：地点iから地点jまでの距離が格納されているN×N個の要素からなる配列。地点iから地点jまでの直接の経路がない場合，進行方向が逆向きの場合及びDt[i][i]の場合には∞（最大値を表す定数）が格納されている。図1の例では，Dt[i][j]の一部は次のとおりである。</p>
	<p>Dt[1][1]＝∞，Dt[1][2]＝10，<br>
	Dt[1][3]＝∞，Dt[2][1]＝∞</p>
	<p>　Sd[i]：出発地である地点1から地点iまでの仮の最短距離（以下，仮最短距離という）を格納する配列。初期設定ではすべての要素に∞を格納する。<br>
	　Pe[i]：最短距離を求める過程で処理済となった地点を識別するための配列。初期設定ではすべてfalseに設定する。Pe[i]がtrueとなったとき，Sd[i]には地点1から地点iまでの最短距離が求まっている。すべての要素がtrueになると処理は終了する。<br>
	<br>
	（3）最短距離を求める手順を，図1の例を使って示す。<br>
	　①　出発地は地点1なので，Pe[1]にtrueを設定し，地点1から直接つながる地点2，4，5までの距離Dt[1][2]，Dt[1][4]，Dt[1][5]をそれぞれSd[2]，Sd[4]，Sd[5]に設定する。その結果，Sd[2]＝10，Sd[4]＝20，Sd[5]＝30となる。この結果を図2に示す。地点iの上又は下にある[]内の数値は，地点1から地点iまでの仮最短距離Sd[i]を表し，網掛けの地点は処理済（Pe[i]＝true）を表す。<br>
	<br>
	<img border="0" src="img/P14-1.png" width="227" height="150"><br>
	　<br>
	　②　未処理の地点のうち，地点1からの仮最短距離が最も短い地点2（2はPe[k]＝falseかつSd[k]が最小となる添字kの値）を選択し，Pe[2]をtrueにする。この時点で，Sd[2]＝10が地点1から地点2の間の最短距離として確定する。<br>
	　次に，地点2から直接行ける地点3と地点5の仮最短距離Sd[i]を更新する。ただし，Sd[i]の値が小さくならない場合は置き換えない。</p>
	<p><code>（更新前） （更新後）<br>
	Sd[3]＝∞ → Sd[3]＝Sd[2]＋Dt[2][3]＝50<br>
	Sd[5]＝30 → Sd[5]＝Sd[2]＋Dt[2][5]＝20</code></p>
	<p>　このとき，地点k（k＝2）を経由する地点i（i＝3，5）の仮最短距離Sd[i]を更新するための代入文を擬似言語で書くと，次の〔プログラムの一部〕のとおりになる。ここで，関数minは二つの引数のうち，小さい方の値を返すシステム関数である。<br>
	<br>
	〔プログラムの一部〕<br>
	・Sd[i] ← min(Sd[i], ［　　a　　］）<br>
	<br>
	この結果を図3に示す。<br>
	<br>
	<img border="0" src="img/P14-2.png" width="240" height="146"><br>
	<br>
	　③　未処理の地点のうち，仮最短距離が最も短い地点は，地点4と地点5の二つである。このように複数ある場合は，要素番号の小さい地点4を選択し，処理済とする。この時点で，Sd[4]が地点1から地点4の間の最短距離として確定する。<br>
	　次に，地点4から直接行ける地点の仮最短距離を更新する。<br>
	　Sd[4]＋Dt[4][5]＝40となり，現在のSd[5]の値より大きいので，更新しない。この結果を図4に示す。<br>
	<br>
	<img border="0" src="img/P15-1.png" width="235" height="154"><br>
	<br>
	　④　未処理の地点のうち，仮最短距離が最も短い地点5を選択し，処理済とする。この時点で，Sd[5]が地点1から地点5の間の最短距離として確定する。<br>
	　次に，地点5から直接行ける地点の仮最短距離を更新する。</p>
	<p>Sd[3]＝50 →　Sd[3]＝Sd[5]＋Dt[5][3]＝30<br>
	Sd[6]＝∞ →　Sd[6]＝Sd[5]＋Dt[5][6]＝50</p>
	<p>この結果を図5に示す。<br>
	<br>
	<img border="0" src="img/P15-2.png" width="234" height="150"><br>
	<br>
	　⑤　未処理の地点のうち，仮最短距離が最も短い地点3を選択し，処理済とする。この時点で，Sd[3]が地点1から地点3の間の最短距離として確定する。<br>
	　次に，地点3から直接行ける地点6の仮最短距離を更新する。<br>
	　手順③と同様に計算し，地点6の仮最短距離Sd[6]の値は［　　b　　］となる。この結果を図6に示す。<br>
	<br>
	<img border="0" src="img/P16-1.png" width="255" height="163"><br>
	<br>
	　⑥　未処理の地点のうち，仮最短距離が最も短い地点6を選択し，処理済とする。この時点で，Sd[6]が地点1から地点6の間の最短距離として確定する。<br>
	　すべての地点が処理済となったので終了となる。この結果を図7に示す。<br>
	<br>
	<img border="0" src="img/P16-2.png" width="253" height="162"></p>
	<hr>
	<p><a name="41"><strong>設問1</strong></a>　アルゴリズムShortestLengthの説明中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
	<br>
	aに関する解答群<br>
	<br>
	ア　Sd[i] ＋ Dt[i][k]<br>
	イ　Sd[i] ＋ Dt[k][i]<br>
	ウ　Sd[k] ＋ Dt[i][k]<br>
	エ　Sd[k] ＋ Dt[k][i]<br>
	<br>
	bに関する解答群<br>
	<br>
	ア　30<br>
	イ　40<br>
	ウ　50<br>
	エ　60</p>
	<hr>
	<p><a href="20F_P_A2.HTM#41">設問1の正解例と解説へ</a></p>
	<hr>
	<p><a name="42"><strong>設問2</strong></a>　次の記述中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
	<br>
	　図8のグラフの場合，出発地を地点1としてアルゴリズムShortestLengthを実行したとき，最短距離が確定する順番は，次のとおりになる。<br>
	<br>
	　　地点1，［　　　　　　　c　　　　　　　］，地点6<br>
	<br>
	　また，配列Sdの要素Sd[3]，Sd[5]及びSd[6]の値は，それぞれ［　　d　　］，［　　e　　］及び［　　f　　］となる。<br>
	<br>
	<img border="0" src="img/P17-1.png" width="230" height="163"><br>
	<br>
	cに関する解答群<br>
	<br>
	ア　地点2，地点4，地点3，地点5<br>
	イ　地点2，地点4，地点5，地点3<br>
	ウ　地点4，地点2，地点3，地点5<br>
	エ　地点4，地点2，地点5，地点3<br>
	<br>
	d～fに関する解答群<br>
	<br>
	ア　30<br>
	イ　40<br>
	ウ　50<br>
	エ　60<br>
	オ　70<br>
	カ　80<br>
	キ　90<br>
	ク　100</p>
	<hr>
	<p><a href="20F_P_A2.HTM#42">設問2の正解例と解説へ</a></p>
	<hr>
	<p><a href="INDEX.HTM">メニューへ戻る</a></p>
	<hr>
	<p><a name="50"><strong>問5</strong></a>　プログラム設計に関する次の記述を読んで，設問1～3に答えよ。<br>
	<br>
	　C社では，ディジタル化した楽曲を会員がダウンロードできる楽曲ダウンロードシステム（以下，システムという）を提供している。<br>
	<br>
	〔システムの概要〕<br>
	（1）楽曲の情報は，楽曲番号をキーとして楽曲管理ファイルに記録される。楽曲番号は，それぞれの楽曲データに割り当てられる一意な番号である。楽曲管理ファイルのレコード様式を図1に示す。<br>
	<br>
	<img border="0" src="img/P18-1.png" width="581" height="95"><br>
	<br>
	（2）会員の情報は，それぞれの会員に一意になるように割り当てた会員番号をキーとして，会員ファイルに記録される。会員ファイルには，会員番号とともに，暗号化したパスワード，氏名，入会日が記録される。会員ファイルのレコード様式を図2に示す。<br>
	<br>
	<img border="0" src="img/P18-2.png" width="319" height="80"><br>
	<br>
	（3）会員は，システムにログインするために会員番号とパスワードを入力する。<br>
	（4）システムは，(3)で入力された会員番号をキーとして会員ファイルを検索し，会員番号が一致したレコードの暗号化したパスワードを取り出す。暗号化したパスワードと，入力されたパスワードを暗号化した結果が一致した場合は，ログインを許可し，楽曲検索画面を表示する。一致しない場合は，ログイン不許可のメッセージを表示して終了する。<br>
	（5）楽曲検索画面には，曲名からジャンルまでの楽曲管理ファイルの項目（以下，検索項目という）が表示される。ログインした会員は，楽曲の検索条件として，一つ以上の検索項目に対する検索内容を入力する。複数の検索条件が指定されたときは，入力されたすべての条件をANDで接続した条件による検索が行われる。検索が不要の場合は，ログアウトを選択する。<br>
	（6）システムは，(5)で入力された検索内容を基に，楽曲管理ファイルを検索する。条件に一致したすべてのレコードを抽出し，楽曲番号，曲名，演奏者名を楽曲選択画面に表示する。条件に一致するレコードがない場合は，楽曲検索画面にその旨のメッセージを表示する。<br>
	（7）(6)で表示された楽曲選択画面で会員が曲名を一つ選択すると，その楽曲のダウンロードがすぐに始まる。再検索を選択すると，楽曲検索画面に戻る。<br>
	（8）ダウンロードが完了したらダウンロードした日時をダウンロード実績ファイルに格納し，ダウンロ－ド完了のメッセージを表示して(5)に戻る。ダウンロード実績ファイルのレコード様式を図3に示す。<br>
	<br>
	<img border="0" src="img/P19-1.png" width="388" height="85"><br>
	<br>
	（9）システムの画面遷移を図4に，モジュール構造を図5に示す。<br>
	<br>
	<img border="0" src="img/P20-1.png" width="613" height="827"></p>
	<hr>
	<p><a name="51"><strong>設問1</strong></a>　会員が1日にダウンロードできる楽曲の件数を，システムで定めた許可件数以下に制限する機能を追加する。次に示すログインした会員の当日のダウンロード件数を求める手順に関する記述中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
	<br>
	　現在日付をシステムから取り出す。次にログインした会員の［　　a　　］と現在日付の二つをキーとしてダウンロード実績ファイルを検索し，レコードの件数を数える。ログイン後ダウンロード実行前までに日付が変わった場合，新しい日付でダウンロード件数を求める必要がある。したがって，このダウンロード件数を求めるモジュールは，［　　b　　］モジュールの直前に実行する必要がある。<br>
	<br>
	aに関する解答群<br>
	<br>
	ア　会員番号<br>
	イ　楽曲データの大きさ<br>
	ウ　楽曲番号<br>
	エ　ダウンロード日付<br>
	オ　入会日<br>
	カ　パスワード<br>
	<br>
	bに関する解答群<br>
	　<br>
	ア　会員ファイルの検索<br>
	イ　楽曲管理ファイルの検索<br>
	ウ　楽曲検索画面の表示<br>
	エ　楽曲選択画面の表示<br>
	オ　楽曲のダウンロード</p>
	<hr>
	<p><a href="20F_P_A2.HTM#51">設問1の正解例と解説へ</a></p>
	<hr>
	<p><a name="52"><strong>設問2</strong></a>　楽曲選択画面の表示項目として，その会員が既にダウンロードしたことのある楽曲については，最後のダウンロード日付を追加する。次の記述中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
	<br>
	　会員の入力した検索内容で楽曲管理ファイルを検索し，条件に一致するすべてのレコードを抽出する。抽出したレコードの楽曲番号が，その会員が既にダウンロード済の楽曲のものであるかどうかは，ダウンロード実績ファイルを［　　c　　］で検索すれば判明する。このダウンロード実績ファイルに対する検索では，楽曲管理ファイルから抽出した1件のレコードに対して，その会員のダウンロード実績の件数は［　　d　　］である。<br>
	<br>
	cに関する解答群<br>
	ア　会員番号<br>
	イ　会員番号と楽曲番号<br>
	ウ　会員番号と楽曲番号とダウンロード日付<br>
	エ　会員番号とダウンロード日付<br>
	オ　楽曲番号<br>
	カ　楽曲番号とダウンロード日付<br>
	キ　ダウンロード日付<br>
	<br>
	dに関する解答群<br>
	ア　0件<br>
	イ　0件以上<br>
	ウ　0件又は1件<br>
	エ　1件<br>
	オ　2件以上</p>
	<hr>
	<p><a href="20F_P_A2.HTM#52">設問2の正解例と解説へ</a></p>
	<hr>
	<p><a name="53"><strong>設問3</strong></a>　入会直後の会員のダウンロード状況を把握するために，全会員の入会後1週間におけるジャンル別ダウンロード件数表を作成することにした。ジャンル別のダウンロード件数表の例を図6に示す。また，ジャンル別ダウンロード件数表の作成の流れを図7に，各処理の説明を表に示す。表中の［　　　　　］に入れる正しい答えを，解答群の中から選べ。<br>
	　なお，ジャンル別ダウンロード件数表には，図6のようにジャンル別のダウンロード件数とその楽曲数が表示されるものとする。<br>
	<br>
	<img border="0" src="img/P22-1.png" width="293" height="226"><br>
	<br>
	<img border="0" src="img/P23-1.png" width="627" height="665"><br>
	<br>
	eに関する解答群<br>
	ア　会員ファイル<br>
	イ　楽曲管理ファイル<br>
	ウ　ダウンロード実績ファイル<br>
	<br>
	fに関する解答群<br>
	ア　会員番号<br>
	イ　楽曲データの大きさ<br>
	ウ　楽曲番号<br>
	エ　ジャンル<br>
	オ　ダウンロード件数</p>
	<hr>
	<p><a href="20F_P_A2.HTM#53">設問3の正解例と解説へ</a></p>
	<hr>
	<p><a href="20F_P_E3.HTM">問6へ進む</a></p>
	<hr>
	<p><a href="INDEX.HTM">メニューへ戻る</a></p>
	<hr>
</blockquote>

</body>

</html>
