<HTML>
<HEAD>
<TITLE>平成11年度秋期試験　(問3～問6)</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" topmargin="0" leftmargin="0">
<blockquote>
<hr>
<H3 align="center">平成11年度秋期試験　正解例と解説(問3～問6)</H3>
<hr>
<P>
<A NAME="30">
<b>
問3</b></a><b>　</b>
<A NAME="30">
<HR>
</a><A NAME="31">　<BR>
<b>
設問1</b></a><b>　</b>
<p>＜解答＞　　ウ　　<br>
　</p>
<HR WIDTH=100%>
<A HREF="11f_p_e2.htm#31">問題へ</A>
<HR WIDTH=100%>
<A NAME="32">　<BR>
<b>
設問2</b></a>　
<p>＜解答＞　　ａ　カ　　　b　オ</p>
<p>＜解説＞<br>
疑似言語で記述されている併合処理のアルゴリズムは、以下のようになっている。</p> 
<table border="0" cellpadding="3" cellspacing="0">
  <tr>
    <td valign="top">
(1)</td>
    <td>ファイルAにレコードが無くなった場合（これが処理α）
      <table border="0" cellpadding="3" cellspacing="0">
        <tr>
          <td valign="top">①</td>
          <td>ファイルBのレコードも無くなったときは　終了フラグendf←１</td>
        </tr>
        <tr>
          <td valign="top">②</td>
          <td>ファイルBのレコードが領域 rcdB に入力されたときは<br>   
            　　ファイルBのレコードをファイルCに出力する<br>
            　　ファイルBのレコードを領域Bに入力する</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td valign="top">
(2)</td>
    <td>ファイルAのレコードが領域 rcdA に入力された場合  
      <table border="0" cellpadding="3" cellspacing="0"> 
        <tr> 
          <td valign="top">①</td> 
          <td>ファイルBのレコードも無くなっているときは<br> 
            　　ファイルAのレコードをファイルCに出力する<br>
            　　ファイルAのレコードを領域Aに入力する</td>
        </tr>
        <tr>
          <td valign="top">②</td>
          <td>ファイルBのレコードが領域 rcdB に入力されたときは<br>   
            　　rcdA、rcdBのうち商品コードの小さい方のレコードを<br>
            　　ファイルCに出力し、次のレコードを領域に入力する</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<p>
したがってこの併合処理では、ファイルAとファイルBにレコードがある間は、商品コードの小さい方のレコードをファイルCに出力する。ファイルAのレコードが無くなれば、ファイルBの残りのレコードをファイルCに出力する。<br>
<br>
またファイルBのレコードが無くなれば、ファイルAの残りのレコードをファイルCに出力する。そして両方のファイルにレコードが無くなれば終了する。<br>
<br>
処理αは、①ファイルAのレコードが無くなり、ファイルBの残りのレコードをすべてファイルCに出力する処理と②両方のファイルにレコードが無くなった場合の終了処理を含む。<br>
ファイルAの商品コードは100, 200で、ファイルBの商品コードは150, 250, 350であるから、商品コードの小さい方から先ず100→150→200の順にファイルCに出力され、ここでファイルAのレコードが無くなる。これより後が、処理αで、①残っているファイルBの商品コード250, 350のレコードをファイルCに出力する処理２回と②最後の終了処理１回が処理αとして合計３回繰り返される。</p>   
<p><img border="0" src="image/A11a03f1.gif" width="286" height="118"><br>  
<br>  
処理βの条件式が、「rcdAの商品コード > rcdBの商品コード」に変わると、入力されたレコードの順に rcdA ,rcdBのいずれか商品コードの大きな方が先に、ファイルCに出力されることになる。最初にrcdA＝100となり、以降rcdBには、150 ,250, 350の順に入力されるので、商品コードの大きな150→250→350の順に出力され、ファイルBのレコードが無くなった後、ファイルAのレコードが商品コード100→200の順に出力される。つまり150→250→350→100→200の順で、解答群のカが正解。<br>   
<img border="0" src="image/A11a03f2.gif" width="286" height="118"><br>  
<br>  
<br>  
図４のファイルをファイルAとして入力した場合、<br>  
　　①先ずrcdA＝200、rcdB＝150で、商品コードの小さい150が出力される。<br> 
　　②次にrcdA＝200、rcdB＝250で、商品コードの小さい200が出力される。<br> 
　　③さらにrcdA＝100、rcdB＝250で、商品コードの小さい100が出力される。<br> 
　　④ここでファイルAのレコードが無くなり、以後ファイルBの残りのレコードが商品コード250、350の順に出力される。つまり150→200→100→250→350の順で、解答群のオが正解。<br> 
<img border="0" src="image/A11a03f3.gif" width="286" height="118"></p> 
<p>　</p> 
<HR WIDTH=100%> 
<A HREF="11f_p_e2.htm#32">問題へ</A> 
<HR WIDTH=100%> 
<p><A HREF="index.htm">メニューへ戻る</A>　</p> 
<HR WIDTH=100%> 
<A NAME="40">　<BR> 
<b> 
問4</b></a>　
<HR WIDTH=100%>
<A NAME="41">
<b>　<BR>
設問</b></a>
<p>＜解答＞設問　ａ　ア　　　　ｂ　ウ　　　　ｃ　オ</p>
<p>＜解説＞<br>
　コミット要求は、トランザクションが正常終了した時に発行される命令である。この命令によるコミット処理でトランザクションが終了し、データベースの内容が更新される。<br>
　ロールバックは、トランザクションによる更新処理中にプログラムが異常終了した場合に、データベースをそのトランザクションの更新開始前の状態に戻す処理である。</p>
<p>空欄a<br>
　分散型データベースの更新１では、サイトBにおいてトランザクションによる更新直後に障害発生し異常終了している。その後ロールバック処理によりデータベースは、そのトランザクションの更新開始前の状態に戻されている。この状態が空欄ａのデータの状態に相当する。したがって空欄ａは更新開始前のｎの状態にある。つまり解答群のアが正解。</p>
<p>空欄b、cについて<br>
　分散型データベースの更新１では、サイトＡ及びサイトＢそれぞれのデータベーに対してコミット処理が行われるが、サイトＡでは正常終了し、サイトＢでは異常終了した場合、サイトＢのみロールバック処理により更新開始前の状態に戻されるので、トランザクション単位でみると更新処理の整合性がなくなる。<br>
　これに対し分散型データベースの更新２では、２相コミットメント制御により両方のサイトで正常終了した場合のみコミット処理により更新確定するが、異常終了したサイトがあると、すべてのサイトがロールバック処理により更新開始前の状態に戻される。<br>
　分散型データベースの更新２の場合、最初のトランザクションによる更新処理“ｓ＋200→ｓ，ｔ＋200→ｔ”では両サイトA、Bとも正常終了し、コミット処理によりサイトAは200＋200→400に、サイトBはｃ＋200→ｔ１に更新確定するが、次のトランザクションによる更新“ｓ－100→ｓ，ｔ＋100→ｔ”では、サイトAは正常終了するが、障害発生によりサイトBは異常終了するので、トランザクション単位での更新の整合性を保持するため、２相コミットメント制御によりサイトA、Bともにロールバック処理され更新開始前の状態、つまりサイトAは400に、サイトBはｔ１に戻される。<br>
　このロールバック処理の結果が、サイトAでは空欄ｂ、サイトBでは800となる。したがって空欄ｂは400となり、ｔ１＝800、ｃ＋200＝ｔ１より、空欄ｃは600となる。</p>
<HR WIDTH=100%>
<A HREF="11f_p_e2.htm#41">問題へ</A>
<HR WIDTH=100%>
<p>
<A HREF="index.htm">メニューへ戻る</A></p>
<HR WIDTH=100%> 
　<BR>
<b><a name="50">問5</a>　</b>
<hr>
<p><b><a name="51">設問</a></b>
</p>
<p>＜解答＞ａ　ク　　　　　ｂ　オ　　　　　ｃ　ウ
</p>
<p>＜解説＞<br>
空欄ａについて<br>
　　システムＸでの実行時間<br>
　＝①の実行時間＋②の実行時間×600＋③の実行時間<br>
　＝40＋１行当たりの実行時間×600＋120　（ミリ秒）<br>
　②は、40万回の浮動小数点計算に相当する実行時間を必要とし、200MFLOPSの演算性能をもつプロセッサで処理するので<br>
　　１行当たりの実行時間<br>
　＝（40×10４×10３）／（200×10６）　（ミリ秒）<br>
　＝2　（ミリ秒）<br>
したがってシステムＸでの実行時間＝40＋2×600＋120＝1360　（ミリ秒）<br>
<br>
空欄ｂについて<br>
　システムＹで実行した場合、②に関する演算処理は並列化でき、4台のコンピュータに処理を均等に分散できるので、②に関する実行時間は４分の１に減るが、No.1が他のコンピュータにデータを配る時間と他からデータを集める時間が別に　必要となるので<br>
　　システムＹでの実行時間<br>
　＝①の実行時間＋No.1がデータを配る時間＋②の実行時間×600／4<br>
　　　　　　　　　　　　　　＋No.1がデータを集める時間＋③の実行時間<br>
　＝40＋150＋2×600／4＋150＋120　（ミリ秒）<br>
　＝760　（ミリ秒）<br>
<br>
空欄ｃについて<br>
　②の処理が浮動小数点計算に換算してＮ万回の処理量に相当するとすると、<br>
　　１行当たりの実行時間＝（Ｎ×10４×10３）／（200×10６）　（ミリ秒）<br>
　　　　　　　　　　　　＝Ｎ／20　（ミリ秒）<br>
この場合のシステムＸ、システムＹでの実行時間は以下のようになる。<br>
　　システムＸでの実行時間<br>
　＝40＋（Ｎ／20）×600＋120　（ミリ秒）<br>
　　システムＹでの実行時間<br>
　＝40＋150＋（Ｎ／20）×（600／4）＋150＋120<br>
したがってシステムＸでの実行時間≦システムＹでの実行時間となるためには、<br>
　　40＋（Ｎ／20）×600＋120≦40＋150＋（Ｎ／20）×（600／4）＋150＋120<br>
となればよい。したがって（Ｎ／20）×450≦300　　　Ｎ≦13　（万回）<br>
<br>
</p>
<HR WIDTH=100%>
<a HREF="11f_p_e2.htm#51">問題へ</a>
<HR WIDTH=100%>
　<BR>
<A HREF="index.htm">メニューへ戻る</A>
<HR WIDTH=100%>
<p><b><a name="60">問6</a>　</b>
</p>
<hr>
<p><b><a name="61">設問1</a>　</b></p>
<p>＜解答＞　　エ</p>
<p>＜解説＞①～④の手順により、各品目の年間消費金額の大きい順に年間消費金額を並べた棒グラフに年間消費金額累計の折れ線グラフを重ねたグラフをパレート図といいます。このパレート図を用い、在庫品目を重要度によりグループ分けして管理する手法をＡＢＣ分析といいます。在庫量への影響度に応じてＡ、Ｂ、Ｃのグループに分けて管理します。<br>
　</p>
<HR WIDTH=100%>
<a HREF="11f_p_e2.htm#61">問題へ</a>
<HR WIDTH=100%>
　
<p><b><a name="62">設問2</a></b></p>
<p>＜解答＞<b>　</b>　ａ　オ　　　　ｂ　エ</p>
<p>＜解説＞“定期発注方式”では、原材料の調達期間に応じて一定期間の長さを決め、その一定期間ごとに次の期間の消費量を予測し、それに基づいて「発注量」を決めるので、きめ細かく在庫を管理することができる。消費量の変動が大きいときも在庫切れの危険が少ない。この方式は、市場の製品に対する需要の変動が大きく、生産計画がしばしば変更されるような場合で、しかも単価が高い原材料の管理に<br>
有効である。<br>
“定量発注方式”では、在庫量が「発注点」まで減少したときに、調達期間を考慮して前もって決めておいた量だけを発注するので、定期発注方式に比べると管理が容易である。しかし、消費量の変動が大きいときには在庫切れを起こす危険がある。製品の需要及び原材料の調達期間が安定し、その時点での在庫量を正確に把握できる原材料の管理に適している。<br>
</p>
<HR WIDTH=100%>
<a HREF="11f_p_e2.htm#62">問題へ</a>
<HR WIDTH=100%>
<A HREF="index.htm">メニューへ戻る
</A>
<HR WIDTH=100%>
<p>　</p>
  </blockquote>
</BODY>
</HTML>
