//===============================================================================================================
//
// camera.h
// author : Haruyuki Neko
//
//===============================================================================================================

/* インクルードガードの先頭 */
#ifndef _CAMERA_H_
#define _CAMERA_H_

//============================================================================
//
// マクロ定義
//
//============================================================================

#define SPACE            ( 400 )
#define ROTATION         ( 2.f )	// カメラの回転量　( 角度 )

//============================================================================
//
// 構造体定義
//
//============================================================================

/* カメラ用 構造体 */
typedef struct
{
	D3DXVECTOR3 posP;					// カメラの視点
	D3DXVECTOR3 posR;					// カメラの注視点
	D3DXVECTOR3 posU;					// カメラの上向ベクトル

	D3DXVECTOR3 rot;					// カメラの向き（回転角）
	float fLengthIntervalCamera;		// カメラの視点と注視点の間の距離を算出

	D3DXMATRIX mtxView;					// ビューマトリックス
	D3DXMATRIX mtxProjection;			// プロジェクトマトリックス

	D3DVIEWPORT9 viewport;
}CAMERA;

//============================================================================
//
// 関数プロトタイプ宣言
//
//============================================================================

void InitCamera(void);		// カメラの初期化
void UpdataCamera(void);	// カメラの更新
void DrawCamera(void);		// カメラの描画
void UnInitCamera(void);	// カメラの終了処理

void RotationCamera(void);	// カメラの回転処理

CAMERA GetCamera(void);		// カメラの情報取得

/* インクルードガードの最終行 */
#endif	// _CAMERA_H_