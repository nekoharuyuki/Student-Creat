//===============================================================================================================
//
// dungeon.cpp
// author : Haruyuki Neko
//
//===============================================================================================================

//============================================================================
//
// インクルード
//
//============================================================================

#include "main.h"
#include "directX3d.h"
#include "debugproc.h"
#include "meshfield.h"
#include "dungeon.h"

//============================================================================
//
// グローバル変数
//
//============================================================================

// ダンジョンの番号
static int g_nDungeonNumber;

// ダンジョン
static int g_aDungeon[ FIELD_Z ][ FIELD_X ] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
												{ 0, 1, 0, 1, 1, 1, 1, 1, 0, 1 },
												{ 0, 1, 0, 0, 0, 0, 0, 1, 0, 1 },
												{ 0, 1, 1, 1, 1, 0, 1, 1, 0, 1 },
												{ 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
												{ 0, 1, 0, 1, 0, 1, 0, 0, 0, 1 },
												{ 1, 1, 0, 0, 0, 1, 1, 1, 1, 1 },
												{ 0, 1, 1, 1, 0, 0, 0, 0, 1, 0 },
												{ 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 },
												{ 0, 1, 0, 1, 0, 1, 1, 0, 1, 2 }, };

static int g_aDungeon_1[ FIELD_Z ][ FIELD_X ] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
												  { 0, 1, 1, 0, 1, 1, 1, 1, 0, 1 },
												  { 0, 1, 0, 0, 0, 0, 0, 1, 0, 1 },
												  { 0, 1, 1, 1, 1, 0, 1, 1, 0, 1 },
												  { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
												  { 0, 1, 0, 1, 0, 1, 0, 0, 0, 1 },
												  { 1, 1, 0, 0, 0, 1, 1, 1, 1, 1 },
												  { 0, 1, 1, 1, 0, 0, 0, 0, 1, 0 },
												  { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 },
												  { 0, 1, 0, 1, 2, 1, 1, 0, 1, 1 }, };

static int g_aDungeon_2[ FIELD_Z ][ FIELD_X ] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
												  { 1, 1, 0, 1, 1, 1, 1, 1, 0, 1 },
												  { 0, 1, 0, 0, 0, 0, 0, 1, 0, 1 },
												  { 0, 1, 1, 1, 1, 0, 1, 1, 0, 1 },
												  { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
												  { 0, 1, 0, 1, 0, 1, 0, 0, 0, 1 },
												  { 1, 1, 0, 0, 0, 1, 1, 1, 1, 1 },
												  { 0, 1, 1, 1, 0, 0, 0, 0, 1, 0 },
												  { 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 },
												  { 2, 1, 0, 1, 0, 1, 1, 0, 1, 1 }, };

static int g_aDungeon_3[ FIELD_Z ][ FIELD_X ] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
												  { 0, 1, 0, 1, 1, 0, 1, 1, 1, 1 },
												  { 0, 1, 1, 1, 0, 0, 0, 1, 0, 0 },
												  { 0, 0, 0, 0, 0, 1, 0, 1, 1, 0 },
												  { 1, 1, 0, 1, 0, 1, 1, 1, 0, 0 },
												  { 0, 0, 0, 1, 0, 0, 0, 1, 0, 1 },
												  { 0, 1, 0, 0, 0, 1, 0, 0, 0, 0 },
												  { 1, 1, 0, 1, 0, 1, 0, 1, 1, 0 },
												  { 1, 0, 0, 1, 0, 1, 0, 0, 1, 0 },
												  { 1, 0, 1, 1, 0, 1, 1, 0, 1, 2 }, };

static int g_aDungeon_4[ FIELD_Z ][ FIELD_X ] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
												  { 0, 1, 0, 1, 1, 0, 1, 1, 1, 1 },
												  { 0, 0, 0, 1, 0, 0, 0, 1, 1, 0 },
												  { 1, 0, 0, 0, 0, 1, 0, 1, 0, 0 },
												  { 1, 0, 0, 1, 0, 1, 0, 1, 0, 1 },
												  { 1, 1, 0, 1, 0, 0, 0, 1, 0, 1 },
												  { 1, 1, 0, 0, 0, 1, 0, 0, 0, 0 },
												  { 1, 0, 0, 0, 1, 1, 0, 1, 1, 0 },
												  { 1, 0, 1, 0, 0, 1, 0, 0, 1, 0 },
												  { 1, 0, 1, 1, 1, 1, 2, 0, 1, 0 }, };

static int g_aDungeon_5[ FIELD_Z ][ FIELD_X ] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
												  { 1, 1, 1, 1, 1, 1, 1, 1, 0, 1 },
												  { 1, 0, 0, 0, 0, 0, 0, 1, 0, 1 },
												  { 1, 0, 1, 1, 1, 1, 0, 1, 0, 1 },
												  { 1, 0, 1, 0, 0, 1, 0, 1, 0, 1 },
												  { 1, 0, 1, 0, 2, 0, 0, 1, 0, 1 },
												  { 1, 0, 1, 0, 0, 0, 0, 1, 0, 1 },
												  { 1, 0, 1, 1, 1, 1, 1, 1, 0, 1 },
												  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
												  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, };

static int g_aDungeon_6[ FIELD_Z ][ FIELD_X ] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
												  { 0, 1, 0, 1, 0, 0, 1, 1, 1, 0 },
												  { 0, 1, 0, 1, 0, 0, 0, 0, 0, 0 },
												  { 0, 1, 0, 1, 1, 0, 1, 0, 0, 0 },
												  { 0, 1, 0, 0, 0, 0, 1, 1, 1, 0 },
												  { 0, 1, 0, 1, 0, 1, 1, 0, 0, 0 },
												  { 0, 0, 0, 1, 0, 0, 1, 0, 1, 1 },
												  { 0, 1, 0, 1, 0, 0, 0, 0, 0, 0 },
												  { 0, 1, 0, 1, 1, 0, 1, 0, 1, 0 },
												  { 0, 0, 0, 1, 0, 2, 0, 0, 1, 0 }, };

// 0　…　床
// 1　…　壁
// 2　…　ゴール

//============================================================================
//
// ダンジョンを選択 関数
// 引数：
//　なし
// 戻り値：
//　なし
//
//============================================================================

void SelectDungeon( void )
{
	// 乱数の初期化
	srand( ( unsigned ) time ( NULL ) );

	g_nDungeonNumber = rand() % 8;

}

//============================================================================
//
// ダンジョンの情報取得 関数
// 引数：
//　int X
//　int Z
// 戻り値：
//　g_aDungeon[ Z ][ X ]
//
//============================================================================

int GetDungeon( int X, int Z )
{
	switch(g_nDungeonNumber)
	{
	case 0:
		return g_aDungeon[ Z ][ X ];
	case 1:
		return g_aDungeon_1[ Z ][ X ];
	case 2:
		return g_aDungeon_2[ Z ][ X ];
	case 3:
		return g_aDungeon_3[ Z ][ X ];
	case 4:
		return g_aDungeon_4[ Z ][ X ];
	case 5:
//		return g_aDungeon_5[ Z ][ X ];
	case 6:
		return g_aDungeon_6[ Z ][ X ];
	default:
		return g_aDungeon[ Z ][ X ];
	}
}

/* EOF */