//===============================================================================================================
//
// main.h
// author : Haruyuki Neko
//
//===============================================================================================================

/* インクルードガードの先頭 */
#ifndef _MAIN_H_	// インクルードガード開始
#define _MAIN_H_	// インクルードガード用マクロ定義

//============================================================================
//
// インクルード
//
//============================================================================

#define STRICT					// 型チェックを厳密に行う
#define D3D_DEBUG_INFO			// Direct3Dデバッグ情報の有効化
//#define WIN32_LEAN_AND_MEAN	// ヘッターからあまり使われない関数を省く

// Windows 関連
#include <windows.h>			// windowsヘッター

// 標準	関連
#include <stdio.h>
#include <string.h>
#include <Math.h>
#include <time.h>

// DirectX 関連
#include <d3dx9.h>		// Direct3D & D3DX（ 内部で「d3d9.h」をインクルード ）
#include <dxerr.h>		// DirectXのエラー処理ユーティリティ・ライブラリ

//============================================================================
//
// マクロ定義
//
//============================================================================

/* ウインドウの名前 */
#define CLASS_NAME      "ウインドウクラス"		// ウインドウクラスの名前
#define WINDOW_NAME     "ダンジョンゲーム"		// ウインドウのキャプション名

/* ウインドウサイズ */
#define SCREEN_WIDTH    ( 940 )	// ウインドウの幅
#define SCREEN_HEIGHT   ( 680 )	// ウインドウの高さ

/* 2D用の頂点フォーマット */
#define	FVF_VERTEX_2D ( D3DFVF_XYZRHW | D3DFVF_DIFFUSE | D3DFVF_TEX1 )
/* 3D用の頂点フォーマット */
#define FVF_VERTEX_3D ( D3DFVF_XYZ | D3DFVF_NORMAL | D3DFVF_DIFFUSE | D3DFVF_TEX1 )

//============================================================================
//
// 構造体定義
//
//============================================================================

/* テクスチャ用 構造体 */

// 頂点構造体
// 上記フォーマットに合わせた構造体

/* 2D */
typedef struct
{
	D3DXVECTOR3 vtx;		// 3Dの頂点座標（ X, Y ）
	float		rhw;
	D3DCOLOR    diffuse;	// 反射光
	D3DXVECTOR2 tex;		// テクスチャ座標
}VERTEX_2D;

/* 3D */
typedef struct
{
	D3DXVECTOR3 vtx;		// 3Dの頂点座標（ X, Y, Z ）
	D3DXVECTOR3 nor;		// 法線ベクトル（ 面の向き ）
	D3DCOLOR    diffuse;	// 反射光
	D3DXVECTOR2 tex;		// テクスチャ座標
}VERTEX_3D;

//============================================================================
//
// 関数プロトタイプ宣言
//
//============================================================================

HRESULT Init(void);		// 初期化
void Draw(void);		// 描画処理
void Updata(void);		// 更新処理
void UnInit(void);		// 開放処理

int GetTime(void);	// 時間取得

/* インクルードガードの最終行 */
#endif	// _MAIN_H_